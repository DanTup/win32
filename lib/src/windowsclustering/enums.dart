/// {@category Enum}
class CLCTL_CODES {
  static const CLCTL_UNKNOWN = 0x00000000;
  static const CLCTL_GET_CHARACTERISTICS = 0x00000005;
  static const CLCTL_GET_FLAGS = 0x00000009;
  static const CLCTL_GET_CLASS_INFO = 0x0000000d;
  static const CLCTL_GET_REQUIRED_DEPENDENCIES = 0x00000011;
  static const CLCTL_GET_ARB_TIMEOUT = 0x00000015;
  static const CLCTL_GET_FAILURE_INFO = 0x00000019;
  static const CLCTL_GET_NAME = 0x00000029;
  static const CLCTL_GET_RESOURCE_TYPE = 0x0000002d;
  static const CLCTL_GET_NODE = 0x00000031;
  static const CLCTL_GET_NETWORK = 0x00000035;
  static const CLCTL_GET_ID = 0x00000039;
  static const CLCTL_GET_FQDN = 0x0000003d;
  static const CLCTL_GET_CLUSTER_SERVICE_ACCOUNT_NAME = 0x00000041;
  static const CLCTL_CHECK_VOTER_EVICT = 0x00000045;
  static const CLCTL_CHECK_VOTER_DOWN = 0x00000049;
  static const CLCTL_SHUTDOWN = 0x0000004d;
  static const CLCTL_ENUM_COMMON_PROPERTIES = 0x00000051;
  static const CLCTL_GET_RO_COMMON_PROPERTIES = 0x00000055;
  static const CLCTL_GET_COMMON_PROPERTIES = 0x00000059;
  static const CLCTL_SET_COMMON_PROPERTIES = 0x0040005e;
  static const CLCTL_VALIDATE_COMMON_PROPERTIES = 0x00000061;
  static const CLCTL_GET_COMMON_PROPERTY_FMTS = 0x00000065;
  static const CLCTL_GET_COMMON_RESOURCE_PROPERTY_FMTS = 0x00000069;
  static const CLCTL_ENUM_PRIVATE_PROPERTIES = 0x00000079;
  static const CLCTL_GET_RO_PRIVATE_PROPERTIES = 0x0000007d;
  static const CLCTL_GET_PRIVATE_PROPERTIES = 0x00000081;
  static const CLCTL_SET_PRIVATE_PROPERTIES = 0x00400086;
  static const CLCTL_VALIDATE_PRIVATE_PROPERTIES = 0x00000089;
  static const CLCTL_GET_PRIVATE_PROPERTY_FMTS = 0x0000008d;
  static const CLCTL_GET_PRIVATE_RESOURCE_PROPERTY_FMTS = 0x00000091;
  static const CLCTL_ADD_REGISTRY_CHECKPOINT = 0x004000a2;
  static const CLCTL_DELETE_REGISTRY_CHECKPOINT = 0x004000a6;
  static const CLCTL_GET_REGISTRY_CHECKPOINTS = 0x000000a9;
  static const CLCTL_ADD_CRYPTO_CHECKPOINT = 0x004000ae;
  static const CLCTL_DELETE_CRYPTO_CHECKPOINT = 0x004000b2;
  static const CLCTL_GET_CRYPTO_CHECKPOINTS = 0x000000b5;
  static const CLCTL_RESOURCE_UPGRADE_DLL = 0x004000ba;
  static const CLCTL_ADD_REGISTRY_CHECKPOINT_64BIT = 0x004000be;
  static const CLCTL_ADD_REGISTRY_CHECKPOINT_32BIT = 0x004000c2;
  static const CLCTL_GET_LOADBAL_PROCESS_LIST = 0x000000c9;
  static const CLCTL_SET_ACCOUNT_ACCESS = 0x004000f2;
  static const CLCTL_GET_NETWORK_NAME = 0x00000169;
  static const CLCTL_NETNAME_GET_VIRTUAL_SERVER_TOKEN = 0x0000016d;
  static const CLCTL_NETNAME_REGISTER_DNS_RECORDS = 0x00000172;
  static const CLCTL_GET_DNS_NAME = 0x00000175;
  static const CLCTL_NETNAME_SET_PWD_INFO = 0x0000017a;
  static const CLCTL_NETNAME_DELETE_CO = 0x0000017e;
  static const CLCTL_NETNAME_VALIDATE_VCO = 0x00000181;
  static const CLCTL_NETNAME_RESET_VCO = 0x00000185;
  static const CLCTL_NETNAME_REPAIR_VCO = 0x0000018d;
  static const CLCTL_STORAGE_GET_DISK_INFO = 0x00000191;
  static const CLCTL_STORAGE_GET_AVAILABLE_DISKS = 0x00000195;
  static const CLCTL_STORAGE_IS_PATH_VALID = 0x00000199;
  static const CLCTL_STORAGE_SYNC_CLUSDISK_DB = 0x0040019e;
  static const CLCTL_STORAGE_GET_DISK_NUMBER_INFO = 0x000001a1;
  static const CLCTL_QUERY_DELETE = 0x000001b9;
  static const CLCTL_IPADDRESS_RENEW_LEASE = 0x004001be;
  static const CLCTL_IPADDRESS_RELEASE_LEASE = 0x004001c2;
  static const CLCTL_QUERY_MAINTENANCE_MODE = 0x000001e1;
  static const CLCTL_SET_MAINTENANCE_MODE = 0x004001e6;
  static const CLCTL_STORAGE_SET_DRIVELETTER = 0x004001ea;
  static const CLCTL_STORAGE_GET_DRIVELETTERS = 0x000001ed;
  static const CLCTL_STORAGE_GET_DISK_INFO_EX = 0x000001f1;
  static const CLCTL_STORAGE_GET_AVAILABLE_DISKS_EX = 0x000001f5;
  static const CLCTL_STORAGE_GET_DISK_INFO_EX2 = 0x000001f9;
  static const CLCTL_STORAGE_GET_CLUSPORT_DISK_COUNT = 0x000001fd;
  static const CLCTL_STORAGE_REMAP_DRIVELETTER = 0x00000201;
  static const CLCTL_STORAGE_GET_DISKID = 0x00000205;
  static const CLCTL_STORAGE_IS_CLUSTERABLE = 0x00000209;
  static const CLCTL_STORAGE_REMOVE_VM_OWNERSHIP = 0x0040020e;
  static const CLCTL_STORAGE_GET_MOUNTPOINTS = 0x00000211;
  static const CLCTL_STORAGE_GET_DIRTY = 0x00000219;
  static const CLCTL_STORAGE_GET_SHARED_VOLUME_INFO = 0x00000225;
  static const CLCTL_STORAGE_IS_CSV_FILE = 0x00000229;
  static const CLCTL_STORAGE_GET_RESOURCEID = 0x0000022d;
  static const CLCTL_VALIDATE_PATH = 0x00000231;
  static const CLCTL_VALIDATE_NETNAME = 0x00000235;
  static const CLCTL_VALIDATE_DIRECTORY = 0x00000239;
  static const CLCTL_BATCH_BLOCK_KEY = 0x0000023e;
  static const CLCTL_BATCH_UNBLOCK_KEY = 0x00000241;
  static const CLCTL_FILESERVER_SHARE_ADD = 0x00400246;
  static const CLCTL_FILESERVER_SHARE_DEL = 0x0040024a;
  static const CLCTL_FILESERVER_SHARE_MODIFY = 0x0040024e;
  static const CLCTL_FILESERVER_SHARE_REPORT = 0x00000251;
  static const CLCTL_NETNAME_GET_OU_FOR_VCO = 0x0040026e;
  static const CLCTL_ENABLE_SHARED_VOLUME_DIRECTIO = 0x0040028a;
  static const CLCTL_DISABLE_SHARED_VOLUME_DIRECTIO = 0x0040028e;
  static const CLCTL_GET_SHARED_VOLUME_ID = 0x00000291;
  static const CLCTL_SET_CSV_MAINTENANCE_MODE = 0x00400296;
  static const CLCTL_SET_SHARED_VOLUME_BACKUP_MODE = 0x0040029a;
  static const CLCTL_STORAGE_GET_SHARED_VOLUME_PARTITION_NAMES = 0x0000029d;
  static const CLCTL_STORAGE_GET_SHARED_VOLUME_STATES = 0x004002a2;
  static const CLCTL_STORAGE_IS_SHARED_VOLUME = 0x000002a5;
  static const CLCTL_GET_CLUSDB_TIMESTAMP = 0x000002a9;
  static const CLCTL_RW_MODIFY_NOOP = 0x004002ae;
  static const CLCTL_IS_QUORUM_BLOCKED = 0x000002b1;
  static const CLCTL_POOL_GET_DRIVE_INFO = 0x000002b5;
  static const CLCTL_GET_GUM_LOCK_OWNER = 0x000002b9;
  static const CLCTL_GET_STUCK_NODES = 0x000002bd;
  static const CLCTL_INJECT_GEM_FAULT = 0x000002c1;
  static const CLCTL_INTRODUCE_GEM_REPAIR_DELAY = 0x000002c5;
  static const CLCTL_SEND_DUMMY_GEM_MESSAGES = 0x000002c9;
  static const CLCTL_BLOCK_GEM_SEND_RECV = 0x000002cd;
  static const CLCTL_GET_GEMID_VECTOR = 0x000002d1;
  static const CLCTL_ADD_CRYPTO_CHECKPOINT_EX = 0x004002d6;
  static const CLCTL_GROUP_GET_LAST_MOVE_TIME = 0x000002d9;
  static const CLCTL_SET_STORAGE_CONFIGURATION = 0x004002e2;
  static const CLCTL_GET_STORAGE_CONFIGURATION = 0x000002e5;
  static const CLCTL_GET_STORAGE_CONFIG_ATTRIBUTES = 0x000002e9;
  static const CLCTL_REMOVE_NODE = 0x004002ee;
  static const CLCTL_IS_FEATURE_INSTALLED = 0x000002f1;
  static const CLCTL_IS_S2D_FEATURE_SUPPORTED = 0x000002f5;
  static const CLCTL_STORAGE_GET_PHYSICAL_DISK_INFO = 0x000002f9;
  static const CLCTL_STORAGE_GET_CLUSBFLT_PATHS = 0x000002fd;
  static const CLCTL_STORAGE_GET_CLUSBFLT_PATHINFO = 0x00000301;
  static const CLCTL_CLEAR_NODE_CONNECTION_INFO = 0x00400306;
  static const CLCTL_SET_DNS_DOMAIN = 0x0040030a;
  static const CTCTL_GET_ROUTESTATUS_BASIC = 0x0000030d;
  static const CTCTL_GET_ROUTESTATUS_EXTENDED = 0x00000311;
  static const CTCTL_GET_FAULT_DOMAIN_STATE = 0x00000315;
  static const CLCTL_NETNAME_SET_PWD_INFOEX = 0x0000031a;
  static const CLCTL_STORAGE_GET_AVAILABLE_DISKS_EX2_INT = 0x00001fe1;
  static const CLCTL_CLOUD_WITNESS_RESOURCE_TYPE_VALIDATE_CREDENTIALS = 0x000020e1;
  static const CLCTL_CLOUD_WITNESS_RESOURCE_UPDATE_TOKEN = 0x004020e6;
  static const CLCTL_RESOURCE_PREPARE_UPGRADE = 0x004020ea;
  static const CLCTL_RESOURCE_UPGRADE_COMPLETED = 0x004020ee;
  static const CLCTL_CLOUD_WITNESS_RESOURCE_TYPE_VALIDATE_CREDENTIALS_WITH_KEY = 0x000020f1;
  static const CLCTL_CLOUD_WITNESS_RESOURCE_UPDATE_KEY = 0x004020f6;
  static const CLCTL_REPLICATION_GET_LOG_INFO = 0x00002145;
  static const CLCTL_REPLICATION_GET_ELIGIBLE_LOGDISKS = 0x00002149;
  static const CLCTL_REPLICATION_GET_ELIGIBLE_TARGET_DATADISKS = 0x0000214d;
  static const CLCTL_REPLICATION_GET_ELIGIBLE_SOURCE_DATADISKS = 0x00002151;
  static const CLCTL_REPLICATION_GET_REPLICATED_DISKS = 0x00002155;
  static const CLCTL_REPLICATION_GET_REPLICA_VOLUMES = 0x00002159;
  static const CLCTL_REPLICATION_GET_LOG_VOLUME = 0x0000215d;
  static const CLCTL_REPLICATION_GET_RESOURCE_GROUP = 0x00002161;
  static const CLCTL_REPLICATION_GET_REPLICATED_PARTITION_INFO = 0x00002165;
  static const CLCTL_GET_STATE_CHANGE_TIME = 0x00002d5d;
  static const CLCTL_SET_CLUSTER_S2D_ENABLED = 0x00402d62;
  static const CLCTL_SET_CLUSTER_S2D_CACHE_METADATA_RESERVE_BYTES = 0x00402d6e;
  static const CLCTL_GROUPSET_GET_GROUPS = 0x00002d71;
  static const CLCTL_GROUPSET_GET_PROVIDER_GROUPS = 0x00002d75;
  static const CLCTL_GROUPSET_GET_PROVIDER_GROUPSETS = 0x00002d79;
  static const CLCTL_GROUP_GET_PROVIDER_GROUPS = 0x00002d7d;
  static const CLCTL_GROUP_GET_PROVIDER_GROUPSETS = 0x00002d81;
  static const CLCTL_GROUP_SET_CCF_FROM_MASTER = 0x00402d86;
  static const CLCTL_GET_INFRASTRUCTURE_SOFS_BUFFER = 0x00002d89;
  static const CLCTL_SET_INFRASTRUCTURE_SOFS_BUFFER = 0x00402d8e;
  static const CLCTL_NOTIFY_INFRASTRUCTURE_SOFS_CHANGED = 0x00402d92;
  static const CLCTL_SCALEOUT_COMMAND = 0x00402d96;
  static const CLCTL_SCALEOUT_CONTROL = 0x00402d9a;
  static const CLCTL_SCALEOUT_GET_CLUSTERS = 0x00402d9d;
  static const CLCTL_RELOAD_AUTOLOGGER_CONFIG = 0x00002dd2;
  static const CLCTL_STORAGE_RENAME_SHARED_VOLUME = 0x00002dd6;
  static const CLCTL_STORAGE_RENAME_SHARED_VOLUME_GUID = 0x00002dda;
  static const CLCTL_ENUM_AFFINITY_RULE_NAMES = 0x00002ddd;
  static const CLCTL_DELETE = 0x00500006;
  static const CLCTL_INSTALL_NODE = 0x0050000a;
  static const CLCTL_EVICT_NODE = 0x0050000e;
  static const CLCTL_ADD_DEPENDENCY = 0x00500012;
  static const CLCTL_REMOVE_DEPENDENCY = 0x00500016;
  static const CLCTL_ADD_OWNER = 0x0050001a;
  static const CLCTL_REMOVE_OWNER = 0x0050001e;
  static const CLCTL_SET_NAME = 0x00500026;
  static const CLCTL_CLUSTER_NAME_CHANGED = 0x0050002a;
  static const CLCTL_CLUSTER_VERSION_CHANGED = 0x0050002e;
  static const CLCTL_FIXUP_ON_UPGRADE = 0x00500032;
  static const CLCTL_STARTING_PHASE1 = 0x00500036;
  static const CLCTL_STARTING_PHASE2 = 0x0050003a;
  static const CLCTL_HOLD_IO = 0x0050003e;
  static const CLCTL_RESUME_IO = 0x00500042;
  static const CLCTL_FORCE_QUORUM = 0x00500046;
  static const CLCTL_INITIALIZE = 0x0050004a;
  static const CLCTL_STATE_CHANGE_REASON = 0x0050004e;
  static const CLCTL_PROVIDER_STATE_CHANGE = 0x00500052;
  static const CLCTL_LEAVING_GROUP = 0x00500056;
  static const CLCTL_JOINING_GROUP = 0x0050005a;
  static const CLCTL_FSWITNESS_GET_EPOCH_INFO = 0x0010005d;
  static const CLCTL_FSWITNESS_SET_EPOCH_INFO = 0x00500062;
  static const CLCTL_FSWITNESS_RELEASE_LOCK = 0x00500066;
  static const CLCTL_NETNAME_CREDS_NOTIFYCAM = 0x0050006a;
  static const CLCTL_NOTIFY_QUORUM_STATUS = 0x0050007e;
  static const CLCTL_NOTIFY_MONITOR_SHUTTING_DOWN = 0x00100081;
  static const CLCTL_UNDELETE = 0x00500086;
  static const CLCTL_GET_OPERATION_CONTEXT = 0x001020e9;
  static const CLCTL_NOTIFY_OWNER_CHANGE = 0x00502122;
  static const CLCTL_VALIDATE_CHANGE_GROUP = 0x00102125;
  static const CLCTL_CHECK_DRAIN_VETO = 0x0010212d;
  static const CLCTL_NOTIFY_DRAIN_COMPLETE = 0x00102131;
}

/// {@category Enum}
class CLUADMEX_OBJECT_TYPE {
  static const CLUADMEX_OT_NONE = 0x00000000;
  static const CLUADMEX_OT_CLUSTER = 0x00000001;
  static const CLUADMEX_OT_NODE = 0x00000002;
  static const CLUADMEX_OT_GROUP = 0x00000003;
  static const CLUADMEX_OT_RESOURCE = 0x00000004;
  static const CLUADMEX_OT_RESOURCETYPE = 0x00000005;
  static const CLUADMEX_OT_NETWORK = 0x00000006;
  static const CLUADMEX_OT_NETINTERFACE = 0x00000007;
}

/// {@category Enum}
class CLUSCTL_AFFINITYRULE_CODES {
  static const CLUSCTL_AFFINITYRULE_GET_COMMON_PROPERTIES = 0x09000059;
  static const CLUSCTL_AFFINITYRULE_GET_RO_COMMON_PROPERTIES = 0x09000055;
  static const CLUSCTL_AFFINITYRULE_SET_COMMON_PROPERTIES = 0x0940005e;
  static const CLUSCTL_AFFINITYRULE_GET_ID = 0x09000039;
  static const CLUSCTL_AFFINITYRULE_GET_GROUPNAMES = 0x09002d71;
}

/// {@category Enum}
class CLUSCTL_CLUSTER_CODES {
  static const CLUSCTL_CLUSTER_UNKNOWN = 0x07000000;
  static const CLUSCTL_CLUSTER_GET_FQDN = 0x0700003d;
  static const CLUSCTL_CLUSTER_SET_STORAGE_CONFIGURATION = 0x074002e2;
  static const CLUSCTL_CLUSTER_GET_STORAGE_CONFIGURATION = 0x070002e5;
  static const CLUSCTL_CLUSTER_GET_STORAGE_CONFIG_ATTRIBUTES = 0x070002e9;
  static const CLUSCTL_CLUSTER_ENUM_COMMON_PROPERTIES = 0x07000051;
  static const CLUSCTL_CLUSTER_GET_RO_COMMON_PROPERTIES = 0x07000055;
  static const CLUSCTL_CLUSTER_GET_COMMON_PROPERTIES = 0x07000059;
  static const CLUSCTL_CLUSTER_SET_COMMON_PROPERTIES = 0x0740005e;
  static const CLUSCTL_CLUSTER_VALIDATE_COMMON_PROPERTIES = 0x07000061;
  static const CLUSCTL_CLUSTER_ENUM_PRIVATE_PROPERTIES = 0x07000079;
  static const CLUSCTL_CLUSTER_GET_RO_PRIVATE_PROPERTIES = 0x0700007d;
  static const CLUSCTL_CLUSTER_GET_PRIVATE_PROPERTIES = 0x07000081;
  static const CLUSCTL_CLUSTER_SET_PRIVATE_PROPERTIES = 0x07400086;
  static const CLUSCTL_CLUSTER_VALIDATE_PRIVATE_PROPERTIES = 0x07000089;
  static const CLUSCTL_CLUSTER_GET_COMMON_PROPERTY_FMTS = 0x07000065;
  static const CLUSCTL_CLUSTER_GET_PRIVATE_PROPERTY_FMTS = 0x0700008d;
  static const CLUSCTL_CLUSTER_CHECK_VOTER_EVICT = 0x07000045;
  static const CLUSCTL_CLUSTER_CHECK_VOTER_DOWN = 0x07000049;
  static const CLUSCTL_CLUSTER_SHUTDOWN = 0x0700004d;
  static const CLUSCTL_CLUSTER_BATCH_BLOCK_KEY = 0x0700023e;
  static const CLUSCTL_CLUSTER_BATCH_UNBLOCK_KEY = 0x07000241;
  static const CLUSCTL_CLUSTER_GET_SHARED_VOLUME_ID = 0x07000291;
  static const CLUSCTL_CLUSTER_GET_CLUSDB_TIMESTAMP = 0x070002a9;
  static const CLUSCTL_CLUSTER_GET_GUM_LOCK_OWNER = 0x070002b9;
  static const CLUSCTL_CLUSTER_REMOVE_NODE = 0x074002ee;
  static const CLUSCTL_CLUSTER_SET_ACCOUNT_ACCESS = 0x074000f2;
  static const CLUSCTL_CLUSTER_CLEAR_NODE_CONNECTION_INFO = 0x07400306;
  static const CLUSCTL_CLUSTER_SET_DNS_DOMAIN = 0x0740030a;
  static const CLUSCTL_CLUSTER_SET_CLUSTER_S2D_ENABLED = 0x07402d62;
  static const CLUSCTL_CLUSTER_SET_CLUSTER_S2D_CACHE_METADATA_RESERVE_BYTES = 0x07402d6e;
  static const CLUSCTL_CLUSTER_STORAGE_RENAME_SHARED_VOLUME = 0x07002dd6;
  static const CLUSCTL_CLUSTER_STORAGE_RENAME_SHARED_VOLUME_GUID = 0x07002dda;
  static const CLUSCTL_CLUSTER_RELOAD_AUTOLOGGER_CONFIG = 0x07002dd2;
  static const CLUSCTL_CLUSTER_ENUM_AFFINITY_RULE_NAMES = 0x07002ddd;
}

/// {@category Enum}
class CLUSCTL_GROUPSET_CODES {
  static const CLUSCTL_GROUPSET_GET_COMMON_PROPERTIES = 0x08000059;
  static const CLUSCTL_GROUPSET_GET_RO_COMMON_PROPERTIES = 0x08000055;
  static const CLUSCTL_GROUPSET_SET_COMMON_PROPERTIES = 0x0840005e;
  static const CLUSCTL_GROUPSET_GET_GROUPS = 0x08002d71;
  static const CLUSCTL_GROUPSET_GET_PROVIDER_GROUPS = 0x08002d75;
  static const CLUSCTL_GROUPSET_GET_PROVIDER_GROUPSETS = 0x08002d79;
  static const CLUSCTL_GROUP_GET_PROVIDER_GROUPS = 0x08002d7d;
  static const CLUSCTL_GROUP_GET_PROVIDER_GROUPSETS = 0x08002d81;
  static const CLUSCTL_GROUPSET_GET_ID = 0x08000039;
}

/// {@category Enum}
class CLUSCTL_GROUP_CODES {
  static const CLUSCTL_GROUP_UNKNOWN = 0x03000000;
  static const CLUSCTL_GROUP_GET_CHARACTERISTICS = 0x03000005;
  static const CLUSCTL_GROUP_GET_FLAGS = 0x03000009;
  static const CLUSCTL_GROUP_GET_NAME = 0x03000029;
  static const CLUSCTL_GROUP_GET_ID = 0x03000039;
  static const CLUSCTL_GROUP_ENUM_COMMON_PROPERTIES = 0x03000051;
  static const CLUSCTL_GROUP_GET_RO_COMMON_PROPERTIES = 0x03000055;
  static const CLUSCTL_GROUP_GET_COMMON_PROPERTIES = 0x03000059;
  static const CLUSCTL_GROUP_SET_COMMON_PROPERTIES = 0x0340005e;
  static const CLUSCTL_GROUP_VALIDATE_COMMON_PROPERTIES = 0x03000061;
  static const CLUSCTL_GROUP_ENUM_PRIVATE_PROPERTIES = 0x03000079;
  static const CLUSCTL_GROUP_GET_RO_PRIVATE_PROPERTIES = 0x0300007d;
  static const CLUSCTL_GROUP_GET_PRIVATE_PROPERTIES = 0x03000081;
  static const CLUSCTL_GROUP_SET_PRIVATE_PROPERTIES = 0x03400086;
  static const CLUSCTL_GROUP_VALIDATE_PRIVATE_PROPERTIES = 0x03000089;
  static const CLUSCTL_GROUP_QUERY_DELETE = 0x030001b9;
  static const CLUSCTL_GROUP_GET_COMMON_PROPERTY_FMTS = 0x03000065;
  static const CLUSCTL_GROUP_GET_PRIVATE_PROPERTY_FMTS = 0x0300008d;
  static const CLUSCTL_GROUP_GET_FAILURE_INFO = 0x03000019;
  static const CLUSCTL_GROUP_GET_LAST_MOVE_TIME = 0x030002d9;
  static const CLUSCTL_GROUP_SET_CCF_FROM_MASTER = 0x03402d86;
}

/// {@category Enum}
class CLUSCTL_NETINTERFACE_CODES {
  static const CLUSCTL_NETINTERFACE_UNKNOWN = 0x06000000;
  static const CLUSCTL_NETINTERFACE_GET_CHARACTERISTICS = 0x06000005;
  static const CLUSCTL_NETINTERFACE_GET_FLAGS = 0x06000009;
  static const CLUSCTL_NETINTERFACE_GET_NAME = 0x06000029;
  static const CLUSCTL_NETINTERFACE_GET_ID = 0x06000039;
  static const CLUSCTL_NETINTERFACE_GET_NODE = 0x06000031;
  static const CLUSCTL_NETINTERFACE_GET_NETWORK = 0x06000035;
  static const CLUSCTL_NETINTERFACE_ENUM_COMMON_PROPERTIES = 0x06000051;
  static const CLUSCTL_NETINTERFACE_GET_RO_COMMON_PROPERTIES = 0x06000055;
  static const CLUSCTL_NETINTERFACE_GET_COMMON_PROPERTIES = 0x06000059;
  static const CLUSCTL_NETINTERFACE_SET_COMMON_PROPERTIES = 0x0640005e;
  static const CLUSCTL_NETINTERFACE_VALIDATE_COMMON_PROPERTIES = 0x06000061;
  static const CLUSCTL_NETINTERFACE_ENUM_PRIVATE_PROPERTIES = 0x06000079;
  static const CLUSCTL_NETINTERFACE_GET_RO_PRIVATE_PROPERTIES = 0x0600007d;
  static const CLUSCTL_NETINTERFACE_GET_PRIVATE_PROPERTIES = 0x06000081;
  static const CLUSCTL_NETINTERFACE_SET_PRIVATE_PROPERTIES = 0x06400086;
  static const CLUSCTL_NETINTERFACE_VALIDATE_PRIVATE_PROPERTIES = 0x06000089;
  static const CLUSCTL_NETINTERFACE_GET_COMMON_PROPERTY_FMTS = 0x06000065;
  static const CLUSCTL_NETINTERFACE_GET_PRIVATE_PROPERTY_FMTS = 0x0600008d;
}

/// {@category Enum}
class CLUSCTL_NETWORK_CODES {
  static const CLUSCTL_NETWORK_UNKNOWN = 0x05000000;
  static const CLUSCTL_NETWORK_GET_CHARACTERISTICS = 0x05000005;
  static const CLUSCTL_NETWORK_GET_FLAGS = 0x05000009;
  static const CLUSCTL_NETWORK_GET_NAME = 0x05000029;
  static const CLUSCTL_NETWORK_GET_ID = 0x05000039;
  static const CLUSCTL_NETWORK_ENUM_COMMON_PROPERTIES = 0x05000051;
  static const CLUSCTL_NETWORK_GET_RO_COMMON_PROPERTIES = 0x05000055;
  static const CLUSCTL_NETWORK_GET_COMMON_PROPERTIES = 0x05000059;
  static const CLUSCTL_NETWORK_SET_COMMON_PROPERTIES = 0x0540005e;
  static const CLUSCTL_NETWORK_VALIDATE_COMMON_PROPERTIES = 0x05000061;
  static const CLUSCTL_NETWORK_ENUM_PRIVATE_PROPERTIES = 0x05000079;
  static const CLUSCTL_NETWORK_GET_RO_PRIVATE_PROPERTIES = 0x0500007d;
  static const CLUSCTL_NETWORK_GET_PRIVATE_PROPERTIES = 0x05000081;
  static const CLUSCTL_NETWORK_SET_PRIVATE_PROPERTIES = 0x05400086;
  static const CLUSCTL_NETWORK_VALIDATE_PRIVATE_PROPERTIES = 0x05000089;
  static const CLUSCTL_NETWORK_GET_COMMON_PROPERTY_FMTS = 0x05000065;
  static const CLUSCTL_NETWORK_GET_PRIVATE_PROPERTY_FMTS = 0x0500008d;
}

/// {@category Enum}
class CLUSCTL_NODE_CODES {
  static const CLUSCTL_NODE_UNKNOWN = 0x04000000;
  static const CLUSCTL_NODE_GET_CHARACTERISTICS = 0x04000005;
  static const CLUSCTL_NODE_GET_FLAGS = 0x04000009;
  static const CLUSCTL_NODE_GET_NAME = 0x04000029;
  static const CLUSCTL_NODE_GET_ID = 0x04000039;
  static const CLUSCTL_NODE_ENUM_COMMON_PROPERTIES = 0x04000051;
  static const CLUSCTL_NODE_GET_RO_COMMON_PROPERTIES = 0x04000055;
  static const CLUSCTL_NODE_GET_COMMON_PROPERTIES = 0x04000059;
  static const CLUSCTL_NODE_SET_COMMON_PROPERTIES = 0x0440005e;
  static const CLUSCTL_NODE_VALIDATE_COMMON_PROPERTIES = 0x04000061;
  static const CLUSCTL_NODE_ENUM_PRIVATE_PROPERTIES = 0x04000079;
  static const CLUSCTL_NODE_GET_RO_PRIVATE_PROPERTIES = 0x0400007d;
  static const CLUSCTL_NODE_GET_PRIVATE_PROPERTIES = 0x04000081;
  static const CLUSCTL_NODE_SET_PRIVATE_PROPERTIES = 0x04400086;
  static const CLUSCTL_NODE_VALIDATE_PRIVATE_PROPERTIES = 0x04000089;
  static const CLUSCTL_NODE_GET_COMMON_PROPERTY_FMTS = 0x04000065;
  static const CLUSCTL_NODE_GET_PRIVATE_PROPERTY_FMTS = 0x0400008d;
  static const CLUSCTL_NODE_GET_CLUSTER_SERVICE_ACCOUNT_NAME = 0x04000041;
  static const CLUSCTL_NODE_GET_STUCK_NODES = 0x040002bd;
  static const CLUSCTL_NODE_INJECT_GEM_FAULT = 0x040002c1;
  static const CLUSCTL_NODE_INTRODUCE_GEM_REPAIR_DELAY = 0x040002c5;
  static const CLUSCTL_NODE_SEND_DUMMY_GEM_MESSAGES = 0x040002c9;
  static const CLUSCTL_NODE_BLOCK_GEM_SEND_RECV = 0x040002cd;
  static const CLUSCTL_NODE_GET_GEMID_VECTOR = 0x040002d1;
}

/// {@category Enum}
class CLUSCTL_RESOURCE_CODES {
  static const CLUSCTL_RESOURCE_UNKNOWN = 0x01000000;
  static const CLUSCTL_RESOURCE_GET_CHARACTERISTICS = 0x01000005;
  static const CLUSCTL_RESOURCE_GET_FLAGS = 0x01000009;
  static const CLUSCTL_RESOURCE_GET_CLASS_INFO = 0x0100000d;
  static const CLUSCTL_RESOURCE_GET_REQUIRED_DEPENDENCIES = 0x01000011;
  static const CLUSCTL_RESOURCE_GET_NAME = 0x01000029;
  static const CLUSCTL_RESOURCE_GET_ID = 0x01000039;
  static const CLUSCTL_RESOURCE_GET_RESOURCE_TYPE = 0x0100002d;
  static const CLUSCTL_RESOURCE_ENUM_COMMON_PROPERTIES = 0x01000051;
  static const CLUSCTL_RESOURCE_GET_RO_COMMON_PROPERTIES = 0x01000055;
  static const CLUSCTL_RESOURCE_GET_COMMON_PROPERTIES = 0x01000059;
  static const CLUSCTL_RESOURCE_SET_COMMON_PROPERTIES = 0x0140005e;
  static const CLUSCTL_RESOURCE_VALIDATE_COMMON_PROPERTIES = 0x01000061;
  static const CLUSCTL_RESOURCE_GET_COMMON_PROPERTY_FMTS = 0x01000065;
  static const CLUSCTL_RESOURCE_ENUM_PRIVATE_PROPERTIES = 0x01000079;
  static const CLUSCTL_RESOURCE_GET_RO_PRIVATE_PROPERTIES = 0x0100007d;
  static const CLUSCTL_RESOURCE_GET_PRIVATE_PROPERTIES = 0x01000081;
  static const CLUSCTL_RESOURCE_SET_PRIVATE_PROPERTIES = 0x01400086;
  static const CLUSCTL_RESOURCE_VALIDATE_PRIVATE_PROPERTIES = 0x01000089;
  static const CLUSCTL_RESOURCE_GET_PRIVATE_PROPERTY_FMTS = 0x0100008d;
  static const CLUSCTL_RESOURCE_ADD_REGISTRY_CHECKPOINT = 0x014000a2;
  static const CLUSCTL_RESOURCE_DELETE_REGISTRY_CHECKPOINT = 0x014000a6;
  static const CLUSCTL_RESOURCE_GET_REGISTRY_CHECKPOINTS = 0x010000a9;
  static const CLUSCTL_RESOURCE_ADD_CRYPTO_CHECKPOINT = 0x014000ae;
  static const CLUSCTL_RESOURCE_DELETE_CRYPTO_CHECKPOINT = 0x014000b2;
  static const CLUSCTL_RESOURCE_ADD_CRYPTO_CHECKPOINT_EX = 0x014002d6;
  static const CLUSCTL_RESOURCE_GET_CRYPTO_CHECKPOINTS = 0x010000b5;
  static const CLUSCTL_RESOURCE_GET_LOADBAL_PROCESS_LIST = 0x010000c9;
  static const CLUSCTL_RESOURCE_GET_NETWORK_NAME = 0x01000169;
  static const CLUSCTL_RESOURCE_NETNAME_GET_VIRTUAL_SERVER_TOKEN = 0x0100016d;
  static const CLUSCTL_RESOURCE_NETNAME_SET_PWD_INFO = 0x0100017a;
  static const CLUSCTL_RESOURCE_NETNAME_SET_PWD_INFOEX = 0x0100031a;
  static const CLUSCTL_RESOURCE_NETNAME_DELETE_CO = 0x0100017e;
  static const CLUSCTL_RESOURCE_NETNAME_VALIDATE_VCO = 0x01000181;
  static const CLUSCTL_RESOURCE_NETNAME_RESET_VCO = 0x01000185;
  static const CLUSCTL_RESOURCE_NETNAME_REPAIR_VCO = 0x0100018d;
  static const CLUSCTL_RESOURCE_NETNAME_REGISTER_DNS_RECORDS = 0x01000172;
  static const CLUSCTL_RESOURCE_GET_DNS_NAME = 0x01000175;
  static const CLUSCTL_RESOURCE_STORAGE_GET_DISK_INFO = 0x01000191;
  static const CLUSCTL_RESOURCE_STORAGE_GET_DISK_NUMBER_INFO = 0x010001a1;
  static const CLUSCTL_RESOURCE_STORAGE_IS_PATH_VALID = 0x01000199;
  static const CLUSCTL_RESOURCE_QUERY_DELETE = 0x010001b9;
  static const CLUSCTL_RESOURCE_UPGRADE_DLL = 0x014000ba;
  static const CLUSCTL_RESOURCE_IPADDRESS_RENEW_LEASE = 0x014001be;
  static const CLUSCTL_RESOURCE_IPADDRESS_RELEASE_LEASE = 0x014001c2;
  static const CLUSCTL_RESOURCE_ADD_REGISTRY_CHECKPOINT_64BIT = 0x014000be;
  static const CLUSCTL_RESOURCE_ADD_REGISTRY_CHECKPOINT_32BIT = 0x014000c2;
  static const CLUSCTL_RESOURCE_QUERY_MAINTENANCE_MODE = 0x010001e1;
  static const CLUSCTL_RESOURCE_SET_MAINTENANCE_MODE = 0x014001e6;
  static const CLUSCTL_RESOURCE_STORAGE_SET_DRIVELETTER = 0x014001ea;
  static const CLUSCTL_RESOURCE_STORAGE_GET_DISK_INFO_EX = 0x010001f1;
  static const CLUSCTL_RESOURCE_STORAGE_GET_DISK_INFO_EX2 = 0x010001f9;
  static const CLUSCTL_RESOURCE_STORAGE_GET_MOUNTPOINTS = 0x01000211;
  static const CLUSCTL_RESOURCE_STORAGE_GET_DIRTY = 0x01000219;
  static const CLUSCTL_RESOURCE_STORAGE_GET_SHARED_VOLUME_INFO = 0x01000225;
  static const CLUSCTL_RESOURCE_SET_CSV_MAINTENANCE_MODE = 0x01400296;
  static const CLUSCTL_RESOURCE_ENABLE_SHARED_VOLUME_DIRECTIO = 0x0140028a;
  static const CLUSCTL_RESOURCE_DISABLE_SHARED_VOLUME_DIRECTIO = 0x0140028e;
  static const CLUSCTL_RESOURCE_SET_SHARED_VOLUME_BACKUP_MODE = 0x0140029a;
  static const CLUSCTL_RESOURCE_STORAGE_GET_SHARED_VOLUME_PARTITION_NAMES = 0x0100029d;
  static const CLUSCTL_RESOURCE_GET_FAILURE_INFO = 0x01000019;
  static const CLUSCTL_RESOURCE_STORAGE_GET_DISKID = 0x01000205;
  static const CLUSCTL_RESOURCE_STORAGE_GET_SHARED_VOLUME_STATES = 0x014002a2;
  static const CLUSCTL_RESOURCE_STORAGE_IS_SHARED_VOLUME = 0x010002a5;
  static const CLUSCTL_RESOURCE_IS_QUORUM_BLOCKED = 0x010002b1;
  static const CLUSCTL_RESOURCE_POOL_GET_DRIVE_INFO = 0x010002b5;
  static const CLUSCTL_RESOURCE_RLUA_GET_VIRTUAL_SERVER_TOKEN = 0x0100016d;
  static const CLUSCTL_RESOURCE_RLUA_SET_PWD_INFO = 0x0100017a;
  static const CLUSCTL_RESOURCE_RLUA_SET_PWD_INFOEX = 0x0100031a;
  static const CLUSCTL_RESOURCE_DELETE = 0x01500006;
  static const CLUSCTL_RESOURCE_UNDELETE = 0x01500086;
  static const CLUSCTL_RESOURCE_INSTALL_NODE = 0x0150000a;
  static const CLUSCTL_RESOURCE_EVICT_NODE = 0x0150000e;
  static const CLUSCTL_RESOURCE_ADD_DEPENDENCY = 0x01500012;
  static const CLUSCTL_RESOURCE_REMOVE_DEPENDENCY = 0x01500016;
  static const CLUSCTL_RESOURCE_ADD_OWNER = 0x0150001a;
  static const CLUSCTL_RESOURCE_REMOVE_OWNER = 0x0150001e;
  static const CLUSCTL_RESOURCE_SET_NAME = 0x01500026;
  static const CLUSCTL_RESOURCE_CLUSTER_NAME_CHANGED = 0x0150002a;
  static const CLUSCTL_RESOURCE_CLUSTER_VERSION_CHANGED = 0x0150002e;
  static const CLUSCTL_RESOURCE_FORCE_QUORUM = 0x01500046;
  static const CLUSCTL_RESOURCE_INITIALIZE = 0x0150004a;
  static const CLUSCTL_RESOURCE_STATE_CHANGE_REASON = 0x0150004e;
  static const CLUSCTL_RESOURCE_PROVIDER_STATE_CHANGE = 0x01500052;
  static const CLUSCTL_RESOURCE_LEAVING_GROUP = 0x01500056;
  static const CLUSCTL_RESOURCE_JOINING_GROUP = 0x0150005a;
  static const CLUSCTL_RESOURCE_FSWITNESS_GET_EPOCH_INFO = 0x0110005d;
  static const CLUSCTL_RESOURCE_FSWITNESS_SET_EPOCH_INFO = 0x01500062;
  static const CLUSCTL_RESOURCE_FSWITNESS_RELEASE_LOCK = 0x01500066;
  static const CLUSCTL_RESOURCE_NETNAME_CREDS_NOTIFYCAM = 0x0150006a;
  static const CLUSCTL_RESOURCE_GET_OPERATION_CONTEXT = 0x011020e9;
  static const CLUSCTL_RESOURCE_RW_MODIFY_NOOP = 0x014002ae;
  static const CLUSCTL_RESOURCE_NOTIFY_QUORUM_STATUS = 0x0150007e;
  static const CLUSCTL_RESOURCE_NOTIFY_OWNER_CHANGE = 0x01502122;
  static const CLUSCTL_RESOURCE_VALIDATE_CHANGE_GROUP = 0x01102125;
  static const CLUSCTL_RESOURCE_STORAGE_RENAME_SHARED_VOLUME = 0x01002dd6;
  static const CLUSCTL_RESOURCE_STORAGE_RENAME_SHARED_VOLUME_GUID = 0x01002dda;
  static const CLUSCTL_CLOUD_WITNESS_RESOURCE_UPDATE_TOKEN = 0x014020e6;
  static const CLUSCTL_CLOUD_WITNESS_RESOURCE_UPDATE_KEY = 0x014020f6;
  static const CLUSCTL_RESOURCE_PREPARE_UPGRADE = 0x014020ea;
  static const CLUSCTL_RESOURCE_UPGRADE_COMPLETED = 0x014020ee;
  static const CLUSCTL_RESOURCE_GET_STATE_CHANGE_TIME = 0x01002d5d;
  static const CLUSCTL_RESOURCE_GET_INFRASTRUCTURE_SOFS_BUFFER = 0x01002d89;
  static const CLUSCTL_RESOURCE_SET_INFRASTRUCTURE_SOFS_BUFFER = 0x01402d8e;
  static const CLUSCTL_RESOURCE_SCALEOUT_COMMAND = 0x01402d96;
  static const CLUSCTL_RESOURCE_SCALEOUT_CONTROL = 0x01402d9a;
  static const CLUSCTL_RESOURCE_SCALEOUT_GET_CLUSTERS = 0x01402d9d;
  static const CLUSCTL_RESOURCE_CHECK_DRAIN_VETO = 0x0110212d;
  static const CLUSCTL_RESOURCE_NOTIFY_DRAIN_COMPLETE = 0x01102131;
}

/// {@category Enum}
class CLUSCTL_RESOURCE_TYPE_CODES {
  static const CLUSCTL_RESOURCE_TYPE_UNKNOWN = 0x02000000;
  static const CLUSCTL_RESOURCE_TYPE_GET_CHARACTERISTICS = 0x02000005;
  static const CLUSCTL_RESOURCE_TYPE_GET_FLAGS = 0x02000009;
  static const CLUSCTL_RESOURCE_TYPE_GET_CLASS_INFO = 0x0200000d;
  static const CLUSCTL_RESOURCE_TYPE_GET_REQUIRED_DEPENDENCIES = 0x02000011;
  static const CLUSCTL_RESOURCE_TYPE_GET_ARB_TIMEOUT = 0x02000015;
  static const CLUSCTL_RESOURCE_TYPE_ENUM_COMMON_PROPERTIES = 0x02000051;
  static const CLUSCTL_RESOURCE_TYPE_GET_RO_COMMON_PROPERTIES = 0x02000055;
  static const CLUSCTL_RESOURCE_TYPE_GET_COMMON_PROPERTIES = 0x02000059;
  static const CLUSCTL_RESOURCE_TYPE_VALIDATE_COMMON_PROPERTIES = 0x02000061;
  static const CLUSCTL_RESOURCE_TYPE_SET_COMMON_PROPERTIES = 0x0240005e;
  static const CLUSCTL_RESOURCE_TYPE_GET_COMMON_PROPERTY_FMTS = 0x02000065;
  static const CLUSCTL_RESOURCE_TYPE_GET_COMMON_RESOURCE_PROPERTY_FMTS = 0x02000069;
  static const CLUSCTL_RESOURCE_TYPE_ENUM_PRIVATE_PROPERTIES = 0x02000079;
  static const CLUSCTL_RESOURCE_TYPE_GET_RO_PRIVATE_PROPERTIES = 0x0200007d;
  static const CLUSCTL_RESOURCE_TYPE_GET_PRIVATE_PROPERTIES = 0x02000081;
  static const CLUSCTL_RESOURCE_TYPE_SET_PRIVATE_PROPERTIES = 0x02400086;
  static const CLUSCTL_RESOURCE_TYPE_VALIDATE_PRIVATE_PROPERTIES = 0x02000089;
  static const CLUSCTL_RESOURCE_TYPE_GET_PRIVATE_PROPERTY_FMTS = 0x0200008d;
  static const CLUSCTL_RESOURCE_TYPE_GET_PRIVATE_RESOURCE_PROPERTY_FMTS = 0x02000091;
  static const CLUSCTL_RESOURCE_TYPE_GET_REGISTRY_CHECKPOINTS = 0x020000a9;
  static const CLUSCTL_RESOURCE_TYPE_GET_CRYPTO_CHECKPOINTS = 0x020000b5;
  static const CLUSCTL_RESOURCE_TYPE_STORAGE_GET_AVAILABLE_DISKS = 0x02000195;
  static const CLUSCTL_RESOURCE_TYPE_STORAGE_SYNC_CLUSDISK_DB = 0x0240019e;
  static const CLUSCTL_RESOURCE_TYPE_NETNAME_VALIDATE_NETNAME = 0x02000235;
  static const CLUSCTL_RESOURCE_TYPE_NETNAME_GET_OU_FOR_VCO = 0x0240026e;
  static const CLUSCTL_RESOURCE_TYPE_GEN_APP_VALIDATE_PATH = 0x02000231;
  static const CLUSCTL_RESOURCE_TYPE_GEN_APP_VALIDATE_DIRECTORY = 0x02000239;
  static const CLUSCTL_RESOURCE_TYPE_GEN_SCRIPT_VALIDATE_PATH = 0x02000231;
  static const CLUSCTL_RESOURCE_TYPE_QUERY_DELETE = 0x020001b9;
  static const CLUSCTL_RESOURCE_TYPE_STORAGE_GET_DRIVELETTERS = 0x020001ed;
  static const CLUSCTL_RESOURCE_TYPE_STORAGE_GET_AVAILABLE_DISKS_EX = 0x020001f5;
  static const CLUSCTL_RESOURCE_TYPE_STORAGE_REMAP_DRIVELETTER = 0x02000201;
  static const CLUSCTL_RESOURCE_TYPE_STORAGE_GET_DISKID = 0x02000205;
  static const CLUSCTL_RESOURCE_TYPE_STORAGE_GET_RESOURCEID = 0x0200022d;
  static const CLUSCTL_RESOURCE_TYPE_STORAGE_IS_CLUSTERABLE = 0x02000209;
  static const CLUSCTL_RESOURCE_TYPE_STORAGE_REMOVE_VM_OWNERSHIP = 0x0240020e;
  static const CLUSCTL_RESOURCE_TYPE_STORAGE_IS_CSV_FILE = 0x01000229;
  static const CLUSCTL_RESOURCE_TYPE_WITNESS_VALIDATE_PATH = 0x02000231;
  static const CLUSCTL_RESOURCE_TYPE_INSTALL_NODE = 0x0250000a;
  static const CLUSCTL_RESOURCE_TYPE_EVICT_NODE = 0x0250000e;
  static const CLUSCTL_RESOURCE_TYPE_CLUSTER_VERSION_CHANGED = 0x0250002e;
  static const CLUSCTL_RESOURCE_TYPE_FIXUP_ON_UPGRADE = 0x02500032;
  static const CLUSCTL_RESOURCE_TYPE_STARTING_PHASE1 = 0x02500036;
  static const CLUSCTL_RESOURCE_TYPE_STARTING_PHASE2 = 0x0250003a;
  static const CLUSCTL_RESOURCE_TYPE_HOLD_IO = 0x0250003e;
  static const CLUSCTL_RESOURCE_TYPE_RESUME_IO = 0x02500042;
  static const CLUSCTL_RESOURCE_TYPE_STORAGE_GET_AVAILABLE_DISKS_EX2_INT = 0x02001fe1;
  static const CLUSCTL_RESOURCE_TYPE_REPLICATION_GET_ELIGIBLE_LOGDISKS = 0x02002149;
  static const CLUSCTL_RESOURCE_TYPE_REPLICATION_GET_ELIGIBLE_TARGET_DATADISKS = 0x0200214d;
  static const CLUSCTL_RESOURCE_TYPE_REPLICATION_GET_ELIGIBLE_SOURCE_DATADISKS = 0x02002151;
  static const CLUSCTL_RESOURCE_TYPE_REPLICATION_GET_REPLICATED_DISKS = 0x02002155;
  static const CLUSCTL_RESOURCE_TYPE_REPLICATION_GET_REPLICA_VOLUMES = 0x02002159;
  static const CLUSCTL_RESOURCE_TYPE_REPLICATION_GET_LOG_VOLUME = 0x0200215d;
  static const CLUSCTL_RESOURCE_TYPE_REPLICATION_GET_RESOURCE_GROUP = 0x02002161;
  static const CLUSCTL_RESOURCE_TYPE_REPLICATION_GET_REPLICATED_PARTITION_INFO = 0x02002165;
  static const CLUSCTL_RESOURCE_TYPE_REPLICATION_GET_LOG_INFO = 0x02002145;
  static const CLUSCTL_CLOUD_WITNESS_RESOURCE_TYPE_VALIDATE_CREDENTIALS = 0x020020e1;
  static const CLUSCTL_CLOUD_WITNESS_RESOURCE_TYPE_VALIDATE_CREDENTIALS_WITH_KEY = 0x020020f1;
  static const CLUSCTL_RESOURCE_TYPE_PREPARE_UPGRADE = 0x024020ea;
  static const CLUSCTL_RESOURCE_TYPE_UPGRADE_COMPLETED = 0x024020ee;
  static const CLUSCTL_RESOURCE_TYPE_NOTIFY_MONITOR_SHUTTING_DOWN = 0x02100081;
  static const CLUSCTL_RESOURCE_TYPE_CHECK_DRAIN_VETO = 0x0210212d;
  static const CLUSCTL_RESOURCE_TYPE_NOTIFY_DRAIN_COMPLETE = 0x02102131;
}

/// {@category Enum}
class CLUSGROUP_TYPE {
  static const ClusGroupTypeCoreCluster = 0x00000001;
  static const ClusGroupTypeAvailableStorage = 0x00000002;
  static const ClusGroupTypeTemporary = 0x00000003;
  static const ClusGroupTypeSharedVolume = 0x00000004;
  static const ClusGroupTypeStoragePool = 0x00000005;
  static const ClusGroupTypeFileServer = 0x00000064;
  static const ClusGroupTypePrintServer = 0x00000065;
  static const ClusGroupTypeDhcpServer = 0x00000066;
  static const ClusGroupTypeDtc = 0x00000067;
  static const ClusGroupTypeMsmq = 0x00000068;
  static const ClusGroupTypeWins = 0x00000069;
  static const ClusGroupTypeStandAloneDfs = 0x0000006a;
  static const ClusGroupTypeGenericApplication = 0x0000006b;
  static const ClusGroupTypeGenericService = 0x0000006c;
  static const ClusGroupTypeGenericScript = 0x0000006d;
  static const ClusGroupTypeIScsiNameService = 0x0000006e;
  static const ClusGroupTypeVirtualMachine = 0x0000006f;
  static const ClusGroupTypeTsSessionBroker = 0x00000070;
  static const ClusGroupTypeIScsiTarget = 0x00000071;
  static const ClusGroupTypeScaleoutFileServer = 0x00000072;
  static const ClusGroupTypeVMReplicaBroker = 0x00000073;
  static const ClusGroupTypeTaskScheduler = 0x00000074;
  static const ClusGroupTypeClusterUpdateAgent = 0x00000075;
  static const ClusGroupTypeScaleoutCluster = 0x00000076;
  static const ClusGroupTypeStorageReplica = 0x00000077;
  static const ClusGroupTypeVMReplicaCoordinator = 0x00000078;
  static const ClusGroupTypeCrossClusterOrchestrator = 0x00000079;
  static const ClusGroupTypeInfrastructureFileServer = 0x0000007a;
  static const ClusGroupTypeUnknown = 0x0000270f;
}

/// {@category Enum}
class CLUSPROP_IPADDR_ENABLENETBIOS {
  static const CLUSPROP_IPADDR_ENABLENETBIOS_DISABLED = 0x00000000;
  static const CLUSPROP_IPADDR_ENABLENETBIOS_ENABLED = 0x00000001;
  static const CLUSPROP_IPADDR_ENABLENETBIOS_TRACK_NIC = 0x00000002;
}

/// {@category Enum}
class CLUSPROP_PIFLAGS {
  static const CLUSPROP_PIFLAG_STICKY = 0x00000001;
  static const CLUSPROP_PIFLAG_REMOVABLE = 0x00000002;
  static const CLUSPROP_PIFLAG_USABLE = 0x00000004;
  static const CLUSPROP_PIFLAG_DEFAULT_QUORUM = 0x00000008;
  static const CLUSPROP_PIFLAG_USABLE_FOR_CSV = 0x00000010;
  static const CLUSPROP_PIFLAG_ENCRYPTION_ENABLED = 0x00000020;
  static const CLUSPROP_PIFLAG_RAW = 0x00000040;
  static const CLUSPROP_PIFLAG_UNKNOWN = 0x80000000;
}

/// {@category Enum}
class CLUSTERSET_OBJECT_TYPE {
  static const CLUSTERSET_OBJECT_TYPE_NONE = 0x00000000;
  static const CLUSTERSET_OBJECT_TYPE_MEMBER = 0x00000001;
  static const CLUSTERSET_OBJECT_TYPE_WORKLOAD = 0x00000002;
  static const CLUSTERSET_OBJECT_TYPE_DATABASE = 0x00000003;
}

/// {@category Enum}
class CLUSTER_CHANGE {
  static const CLUSTER_CHANGE_NODE_STATE = 0x00000001;
  static const CLUSTER_CHANGE_NODE_DELETED = 0x00000002;
  static const CLUSTER_CHANGE_NODE_ADDED = 0x00000004;
  static const CLUSTER_CHANGE_NODE_PROPERTY = 0x00000008;
  static const CLUSTER_CHANGE_REGISTRY_NAME = 0x00000010;
  static const CLUSTER_CHANGE_REGISTRY_ATTRIBUTES = 0x00000020;
  static const CLUSTER_CHANGE_REGISTRY_VALUE = 0x00000040;
  static const CLUSTER_CHANGE_REGISTRY_SUBTREE = 0x00000080;
  static const CLUSTER_CHANGE_RESOURCE_STATE = 0x00000100;
  static const CLUSTER_CHANGE_RESOURCE_DELETED = 0x00000200;
  static const CLUSTER_CHANGE_RESOURCE_ADDED = 0x00000400;
  static const CLUSTER_CHANGE_RESOURCE_PROPERTY = 0x00000800;
  static const CLUSTER_CHANGE_GROUP_STATE = 0x00001000;
  static const CLUSTER_CHANGE_GROUP_DELETED = 0x00002000;
  static const CLUSTER_CHANGE_GROUP_ADDED = 0x00004000;
  static const CLUSTER_CHANGE_GROUP_PROPERTY = 0x00008000;
  static const CLUSTER_CHANGE_RESOURCE_TYPE_DELETED = 0x00010000;
  static const CLUSTER_CHANGE_RESOURCE_TYPE_ADDED = 0x00020000;
  static const CLUSTER_CHANGE_RESOURCE_TYPE_PROPERTY = 0x00040000;
  static const CLUSTER_CHANGE_CLUSTER_RECONNECT = 0x00080000;
  static const CLUSTER_CHANGE_NETWORK_STATE = 0x00100000;
  static const CLUSTER_CHANGE_NETWORK_DELETED = 0x00200000;
  static const CLUSTER_CHANGE_NETWORK_ADDED = 0x00400000;
  static const CLUSTER_CHANGE_NETWORK_PROPERTY = 0x00800000;
  static const CLUSTER_CHANGE_NETINTERFACE_STATE = 0x01000000;
  static const CLUSTER_CHANGE_NETINTERFACE_DELETED = 0x02000000;
  static const CLUSTER_CHANGE_NETINTERFACE_ADDED = 0x04000000;
  static const CLUSTER_CHANGE_NETINTERFACE_PROPERTY = 0x08000000;
  static const CLUSTER_CHANGE_QUORUM_STATE = 0x10000000;
  static const CLUSTER_CHANGE_CLUSTER_STATE = 0x20000000;
  static const CLUSTER_CHANGE_CLUSTER_PROPERTY = 0x40000000;
  static const CLUSTER_CHANGE_HANDLE_CLOSE = 0x80000000;
  static const CLUSTER_CHANGE_ALL = 0xffffffff;
}

/// {@category Enum}
class CLUSTER_CHANGE_CLUSTER_V2 {
  static const CLUSTER_CHANGE_CLUSTER_RECONNECT_V2 = 0x00000001;
  static const CLUSTER_CHANGE_CLUSTER_STATE_V2 = 0x00000002;
  static const CLUSTER_CHANGE_CLUSTER_GROUP_ADDED_V2 = 0x00000004;
  static const CLUSTER_CHANGE_CLUSTER_HANDLE_CLOSE_V2 = 0x00000008;
  static const CLUSTER_CHANGE_CLUSTER_NETWORK_ADDED_V2 = 0x00000010;
  static const CLUSTER_CHANGE_CLUSTER_NODE_ADDED_V2 = 0x00000020;
  static const CLUSTER_CHANGE_CLUSTER_RESOURCE_TYPE_ADDED_V2 = 0x00000040;
  static const CLUSTER_CHANGE_CLUSTER_COMMON_PROPERTY_V2 = 0x00000080;
  static const CLUSTER_CHANGE_CLUSTER_PRIVATE_PROPERTY_V2 = 0x00000100;
  static const CLUSTER_CHANGE_CLUSTER_LOST_NOTIFICATIONS_V2 = 0x00000200;
  static const CLUSTER_CHANGE_CLUSTER_RENAME_V2 = 0x00000400;
  static const CLUSTER_CHANGE_CLUSTER_MEMBERSHIP_V2 = 0x00000800;
  static const CLUSTER_CHANGE_CLUSTER_UPGRADED_V2 = 0x00001000;
  static const CLUSTER_CHANGE_CLUSTER_ALL_V2 = 0x00001fff;
}

/// {@category Enum}
class CLUSTER_CHANGE_GROUPSET_V2 {
  static const CLUSTER_CHANGE_GROUPSET_DELETED_v2 = 0x00000001;
  static const CLUSTER_CHANGE_GROUPSET_COMMON_PROPERTY_V2 = 0x00000002;
  static const CLUSTER_CHANGE_GROUPSET_PRIVATE_PROPERTY_V2 = 0x00000004;
  static const CLUSTER_CHANGE_GROUPSET_STATE_V2 = 0x00000008;
  static const CLUSTER_CHANGE_GROUPSET_GROUP_ADDED = 0x00000010;
  static const CLUSTER_CHANGE_GROUPSET_GROUP_REMOVED = 0x00000020;
  static const CLUSTER_CHANGE_GROUPSET_DEPENDENCIES_V2 = 0x00000040;
  static const CLUSTER_CHANGE_GROUPSET_DEPENDENTS_V2 = 0x00000080;
  static const CLUSTER_CHANGE_GROUPSET_HANDLE_CLOSE_v2 = 0x00000100;
  static const CLUSTER_CHANGE_GROUPSET_ALL_V2 = 0x000001ff;
}

/// {@category Enum}
class CLUSTER_CHANGE_GROUP_V2 {
  static const CLUSTER_CHANGE_GROUP_DELETED_V2 = 0x00000001;
  static const CLUSTER_CHANGE_GROUP_COMMON_PROPERTY_V2 = 0x00000002;
  static const CLUSTER_CHANGE_GROUP_PRIVATE_PROPERTY_V2 = 0x00000004;
  static const CLUSTER_CHANGE_GROUP_STATE_V2 = 0x00000008;
  static const CLUSTER_CHANGE_GROUP_OWNER_NODE_V2 = 0x00000010;
  static const CLUSTER_CHANGE_GROUP_PREFERRED_OWNERS_V2 = 0x00000020;
  static const CLUSTER_CHANGE_GROUP_RESOURCE_ADDED_V2 = 0x00000040;
  static const CLUSTER_CHANGE_GROUP_RESOURCE_GAINED_V2 = 0x00000080;
  static const CLUSTER_CHANGE_GROUP_RESOURCE_LOST_V2 = 0x00000100;
  static const CLUSTER_CHANGE_GROUP_HANDLE_CLOSE_V2 = 0x00000200;
  static const CLUSTER_CHANGE_GROUP_ALL_V2 = 0x000003ff;
}

/// {@category Enum}
class CLUSTER_CHANGE_NETINTERFACE_V2 {
  static const CLUSTER_CHANGE_NETINTERFACE_DELETED_V2 = 0x00000001;
  static const CLUSTER_CHANGE_NETINTERFACE_COMMON_PROPERTY_V2 = 0x00000002;
  static const CLUSTER_CHANGE_NETINTERFACE_PRIVATE_PROPERTY_V2 = 0x00000004;
  static const CLUSTER_CHANGE_NETINTERFACE_STATE_V2 = 0x00000008;
  static const CLUSTER_CHANGE_NETINTERFACE_HANDLE_CLOSE_V2 = 0x00000010;
  static const CLUSTER_CHANGE_NETINTERFACE_ALL_V2 = 0x0000001f;
}

/// {@category Enum}
class CLUSTER_CHANGE_NETWORK_V2 {
  static const CLUSTER_CHANGE_NETWORK_DELETED_V2 = 0x00000001;
  static const CLUSTER_CHANGE_NETWORK_COMMON_PROPERTY_V2 = 0x00000002;
  static const CLUSTER_CHANGE_NETWORK_PRIVATE_PROPERTY_V2 = 0x00000004;
  static const CLUSTER_CHANGE_NETWORK_STATE_V2 = 0x00000008;
  static const CLUSTER_CHANGE_NETWORK_HANDLE_CLOSE_V2 = 0x00000010;
  static const CLUSTER_CHANGE_NETWORK_ALL_V2 = 0x0000001f;
}

/// {@category Enum}
class CLUSTER_CHANGE_NODE_UPGRADE_PHASE_V2 {
  static const CLUSTER_CHANGE_UPGRADE_NODE_PREPARE = 0x00000001;
  static const CLUSTER_CHANGE_UPGRADE_NODE_COMMIT = 0x00000002;
  static const CLUSTER_CHANGE_UPGRADE_NODE_POSTCOMMIT = 0x00000004;
  static const CLUSTER_CHANGE_UPGRADE_ALL = 0x00000007;
}

/// {@category Enum}
class CLUSTER_CHANGE_NODE_V2 {
  static const CLUSTER_CHANGE_NODE_NETINTERFACE_ADDED_V2 = 0x00000001;
  static const CLUSTER_CHANGE_NODE_DELETED_V2 = 0x00000002;
  static const CLUSTER_CHANGE_NODE_COMMON_PROPERTY_V2 = 0x00000004;
  static const CLUSTER_CHANGE_NODE_PRIVATE_PROPERTY_V2 = 0x00000008;
  static const CLUSTER_CHANGE_NODE_STATE_V2 = 0x00000010;
  static const CLUSTER_CHANGE_NODE_GROUP_GAINED_V2 = 0x00000020;
  static const CLUSTER_CHANGE_NODE_GROUP_LOST_V2 = 0x00000040;
  static const CLUSTER_CHANGE_NODE_HANDLE_CLOSE_V2 = 0x00000080;
  static const CLUSTER_CHANGE_NODE_ALL_V2 = 0x000000ff;
}

/// {@category Enum}
class CLUSTER_CHANGE_QUORUM_V2 {
  static const CLUSTER_CHANGE_QUORUM_STATE_V2 = 0x00000001;
  static const CLUSTER_CHANGE_QUORUM_ALL_V2 = 0x00000001;
}

/// {@category Enum}
class CLUSTER_CHANGE_REGISTRY_V2 {
  static const CLUSTER_CHANGE_REGISTRY_ATTRIBUTES_V2 = 0x00000001;
  static const CLUSTER_CHANGE_REGISTRY_NAME_V2 = 0x00000002;
  static const CLUSTER_CHANGE_REGISTRY_SUBTREE_V2 = 0x00000004;
  static const CLUSTER_CHANGE_REGISTRY_VALUE_V2 = 0x00000008;
  static const CLUSTER_CHANGE_REGISTRY_HANDLE_CLOSE_V2 = 0x00000010;
  static const CLUSTER_CHANGE_REGISTRY_ALL_V2 = 0x0000001f;
}

/// {@category Enum}
class CLUSTER_CHANGE_RESOURCE_TYPE_V2 {
  static const CLUSTER_CHANGE_RESOURCE_TYPE_DELETED_V2 = 0x00000001;
  static const CLUSTER_CHANGE_RESOURCE_TYPE_COMMON_PROPERTY_V2 = 0x00000002;
  static const CLUSTER_CHANGE_RESOURCE_TYPE_PRIVATE_PROPERTY_V2 = 0x00000004;
  static const CLUSTER_CHANGE_RESOURCE_TYPE_POSSIBLE_OWNERS_V2 = 0x00000008;
  static const CLUSTER_CHANGE_RESOURCE_TYPE_DLL_UPGRADED_V2 = 0x00000010;
  static const CLUSTER_RESOURCE_TYPE_SPECIFIC_V2 = 0x00000020;
  static const CLUSTER_CHANGE_RESOURCE_TYPE_ALL_V2 = 0x0000003f;
}

/// {@category Enum}
class CLUSTER_CHANGE_RESOURCE_V2 {
  static const CLUSTER_CHANGE_RESOURCE_COMMON_PROPERTY_V2 = 0x00000001;
  static const CLUSTER_CHANGE_RESOURCE_PRIVATE_PROPERTY_V2 = 0x00000002;
  static const CLUSTER_CHANGE_RESOURCE_STATE_V2 = 0x00000004;
  static const CLUSTER_CHANGE_RESOURCE_OWNER_GROUP_V2 = 0x00000008;
  static const CLUSTER_CHANGE_RESOURCE_DEPENDENCIES_V2 = 0x00000010;
  static const CLUSTER_CHANGE_RESOURCE_DEPENDENTS_V2 = 0x00000020;
  static const CLUSTER_CHANGE_RESOURCE_POSSIBLE_OWNERS_V2 = 0x00000040;
  static const CLUSTER_CHANGE_RESOURCE_DELETED_V2 = 0x00000080;
  static const CLUSTER_CHANGE_RESOURCE_DLL_UPGRADED_V2 = 0x00000100;
  static const CLUSTER_CHANGE_RESOURCE_HANDLE_CLOSE_V2 = 0x00000200;
  static const CLUSTER_CHANGE_RESOURCE_TERMINAL_STATE_V2 = 0x00000400;
  static const CLUSTER_CHANGE_RESOURCE_ALL_V2 = 0x000007ff;
}

/// {@category Enum}
class CLUSTER_CHANGE_SHARED_VOLUME_V2 {
  static const CLUSTER_CHANGE_SHARED_VOLUME_STATE_V2 = 0x00000001;
  static const CLUSTER_CHANGE_SHARED_VOLUME_ADDED_V2 = 0x00000002;
  static const CLUSTER_CHANGE_SHARED_VOLUME_REMOVED_V2 = 0x00000004;
  static const CLUSTER_CHANGE_SHARED_VOLUME_ALL_V2 = 0x00000007;
}

/// {@category Enum}
class CLUSTER_CHANGE_SPACEPORT_V2 {
  static const CLUSTER_CHANGE_SPACEPORT_CUSTOM_PNP_V2 = 0x00000001;
}

/// {@category Enum}
class CLUSTER_CLOUD_TYPE {
  static const CLUSTER_CLOUD_TYPE_NONE = 0x00000000;
  static const CLUSTER_CLOUD_TYPE_AZURE = 0x00000001;
  static const CLUSTER_CLOUD_TYPE_MIXED = 0x00000080;
  static const CLUSTER_CLOUD_TYPE_UNKNOWN = 0xffffffff;
}

/// {@category Enum}
class CLUSTER_CONTROL_OBJECT {
  static const CLUS_OBJECT_INVALID = 0x00000000;
  static const CLUS_OBJECT_RESOURCE = 0x00000001;
  static const CLUS_OBJECT_RESOURCE_TYPE = 0x00000002;
  static const CLUS_OBJECT_GROUP = 0x00000003;
  static const CLUS_OBJECT_NODE = 0x00000004;
  static const CLUS_OBJECT_NETWORK = 0x00000005;
  static const CLUS_OBJECT_NETINTERFACE = 0x00000006;
  static const CLUS_OBJECT_CLUSTER = 0x00000007;
  static const CLUS_OBJECT_GROUPSET = 0x00000008;
  static const CLUS_OBJECT_AFFINITYRULE = 0x00000009;
  static const CLUS_OBJECT_USER = 0x00000080;
}

/// {@category Enum}
class CLUSTER_CSV_VOLUME_FAULT_STATE {
  static const VolumeStateNoFaults = 0x00000000;
  static const VolumeStateNoDirectIO = 0x00000001;
  static const VolumeStateNoAccess = 0x00000002;
  static const VolumeStateInMaintenance = 0x00000004;
  static const VolumeStateDismounted = 0x00000008;
}

/// {@category Enum}
class CLUSTER_ENUM {
  static const CLUSTER_ENUM_NODE = 0x00000001;
  static const CLUSTER_ENUM_RESTYPE = 0x00000002;
  static const CLUSTER_ENUM_RESOURCE = 0x00000004;
  static const CLUSTER_ENUM_GROUP = 0x00000008;
  static const CLUSTER_ENUM_NETWORK = 0x00000010;
  static const CLUSTER_ENUM_NETINTERFACE = 0x00000020;
  static const CLUSTER_ENUM_SHARED_VOLUME_GROUP = 0x20000000;
  static const CLUSTER_ENUM_SHARED_VOLUME_RESOURCE = 0x40000000;
  static const CLUSTER_ENUM_INTERNAL_NETWORK = 0x80000000;
  static const CLUSTER_ENUM_ALL = 0x0000003f;
}

/// {@category Enum}
class CLUSTER_GROUP_AUTOFAILBACK_TYPE {
  static const ClusterGroupPreventFailback = 0x00000000;
  static const ClusterGroupAllowFailback = 0x00000001;
  static const ClusterGroupFailbackTypeCount = 0x00000002;
}

/// {@category Enum}
class CLUSTER_GROUP_ENUM {
  static const CLUSTER_GROUP_ENUM_CONTAINS = 0x00000001;
  static const CLUSTER_GROUP_ENUM_NODES = 0x00000002;
  static const CLUSTER_GROUP_ENUM_ALL = 0x00000003;
}

/// {@category Enum}
class CLUSTER_GROUP_PRIORITY {
  static const PriorityDisabled = 0x00000000;
  static const PriorityLow = 0x000003e8;
  static const PriorityMedium = 0x000007d0;
  static const PriorityHigh = 0x00000bb8;
}

/// {@category Enum}
class CLUSTER_GROUP_STATE {
  static const ClusterGroupStateUnknown = 0xffffffff;
  static const ClusterGroupOnline = 0x00000000;
  static const ClusterGroupOffline = 0x00000001;
  static const ClusterGroupFailed = 0x00000002;
  static const ClusterGroupPartialOnline = 0x00000003;
  static const ClusterGroupPending = 0x00000004;
}

/// {@category Enum}
class CLUSTER_MGMT_POINT_RESTYPE {
  static const CLUSTER_MGMT_POINT_RESTYPE_AUTO = 0x00000000;
  static const CLUSTER_MGMT_POINT_RESTYPE_SNN = 0x00000001;
  static const CLUSTER_MGMT_POINT_RESTYPE_DNN = 0x00000002;
}

/// {@category Enum}
class CLUSTER_MGMT_POINT_TYPE {
  static const CLUSTER_MGMT_POINT_TYPE_NONE = 0x00000000;
  static const CLUSTER_MGMT_POINT_TYPE_CNO = 0x00000001;
  static const CLUSTER_MGMT_POINT_TYPE_DNS_ONLY = 0x00000002;
  static const CLUSTER_MGMT_POINT_TYPE_CNO_ONLY = 0x00000003;
}

/// {@category Enum}
class CLUSTER_NETINTERFACE_STATE {
  static const ClusterNetInterfaceStateUnknown = 0xffffffff;
  static const ClusterNetInterfaceUnavailable = 0x00000000;
  static const ClusterNetInterfaceFailed = 0x00000001;
  static const ClusterNetInterfaceUnreachable = 0x00000002;
  static const ClusterNetInterfaceUp = 0x00000003;
}

/// {@category Enum}
class CLUSTER_NETWORK_ENUM {
  static const CLUSTER_NETWORK_ENUM_NETINTERFACES = 0x00000001;
  static const CLUSTER_NETWORK_ENUM_ALL = 0x00000001;
}

/// {@category Enum}
class CLUSTER_NETWORK_ROLE {
  static const ClusterNetworkRoleNone = 0x00000000;
  static const ClusterNetworkRoleInternalUse = 0x00000001;
  static const ClusterNetworkRoleClientAccess = 0x00000002;
  static const ClusterNetworkRoleInternalAndClient = 0x00000003;
}

/// {@category Enum}
class CLUSTER_NETWORK_STATE {
  static const ClusterNetworkStateUnknown = 0xffffffff;
  static const ClusterNetworkUnavailable = 0x00000000;
  static const ClusterNetworkDown = 0x00000001;
  static const ClusterNetworkPartitioned = 0x00000002;
  static const ClusterNetworkUp = 0x00000003;
}

/// {@category Enum}
class CLUSTER_NODE_DRAIN_STATUS {
  static const NodeDrainStatusNotInitiated = 0x00000000;
  static const NodeDrainStatusInProgress = 0x00000001;
  static const NodeDrainStatusCompleted = 0x00000002;
  static const NodeDrainStatusFailed = 0x00000003;
  static const ClusterNodeDrainStatusCount = 0x00000004;
}

/// {@category Enum}
class CLUSTER_NODE_ENUM {
  static const CLUSTER_NODE_ENUM_NETINTERFACES = 0x00000001;
  static const CLUSTER_NODE_ENUM_GROUPS = 0x00000002;
  static const CLUSTER_NODE_ENUM_PREFERRED_GROUPS = 0x00000004;
  static const CLUSTER_NODE_ENUM_ALL = 0x00000003;
}

/// {@category Enum}
class CLUSTER_NODE_RESUME_FAILBACK_TYPE {
  static const DoNotFailbackGroups = 0x00000000;
  static const FailbackGroupsImmediately = 0x00000001;
  static const FailbackGroupsPerPolicy = 0x00000002;
  static const ClusterNodeResumeFailbackTypeCount = 0x00000003;
}

/// {@category Enum}
class CLUSTER_NODE_STATE {
  static const ClusterNodeStateUnknown = 0xffffffff;
  static const ClusterNodeUp = 0x00000000;
  static const ClusterNodeDown = 0x00000001;
  static const ClusterNodePaused = 0x00000002;
  static const ClusterNodeJoining = 0x00000003;
}

/// {@category Enum}
class CLUSTER_NODE_STATUS {
  static const NodeStatusNormal = 0x00000000;
  static const NodeStatusIsolated = 0x00000001;
  static const NodeStatusQuarantined = 0x00000002;
  static const NodeStatusDrainInProgress = 0x00000004;
  static const NodeStatusDrainCompleted = 0x00000008;
  static const NodeStatusDrainFailed = 0x00000010;
  static const NodeStatusAvoidPlacement = 0x00000020;
  static const NodeStatusMax = 0x00000033;
}

/// {@category Enum}
class CLUSTER_NOTIFICATIONS_VERSION {
  static const CLUSTER_NOTIFICATIONS_V1 = 0x00000001;
  static const CLUSTER_NOTIFICATIONS_V2 = 0x00000002;
}

/// {@category Enum}
class CLUSTER_OBJECT_TYPE {
  static const CLUSTER_OBJECT_TYPE_NONE = 0x00000000;
  static const CLUSTER_OBJECT_TYPE_CLUSTER = 0x00000001;
  static const CLUSTER_OBJECT_TYPE_GROUP = 0x00000002;
  static const CLUSTER_OBJECT_TYPE_RESOURCE = 0x00000003;
  static const CLUSTER_OBJECT_TYPE_RESOURCE_TYPE = 0x00000004;
  static const CLUSTER_OBJECT_TYPE_NETWORK_INTERFACE = 0x00000005;
  static const CLUSTER_OBJECT_TYPE_NETWORK = 0x00000006;
  static const CLUSTER_OBJECT_TYPE_NODE = 0x00000007;
  static const CLUSTER_OBJECT_TYPE_REGISTRY = 0x00000008;
  static const CLUSTER_OBJECT_TYPE_QUORUM = 0x00000009;
  static const CLUSTER_OBJECT_TYPE_SHARED_VOLUME = 0x0000000a;
  static const CLUSTER_OBJECT_TYPE_GROUPSET = 0x0000000d;
  static const CLUSTER_OBJECT_TYPE_AFFINITYRULE = 0x00000010;
}

/// {@category Enum}
class CLUSTER_PROPERTY_FORMAT {
  static const CLUSPROP_FORMAT_UNKNOWN = 0x00000000;
  static const CLUSPROP_FORMAT_BINARY = 0x00000001;
  static const CLUSPROP_FORMAT_DWORD = 0x00000002;
  static const CLUSPROP_FORMAT_SZ = 0x00000003;
  static const CLUSPROP_FORMAT_EXPAND_SZ = 0x00000004;
  static const CLUSPROP_FORMAT_MULTI_SZ = 0x00000005;
  static const CLUSPROP_FORMAT_ULARGE_INTEGER = 0x00000006;
  static const CLUSPROP_FORMAT_LONG = 0x00000007;
  static const CLUSPROP_FORMAT_EXPANDED_SZ = 0x00000008;
  static const CLUSPROP_FORMAT_SECURITY_DESCRIPTOR = 0x00000009;
  static const CLUSPROP_FORMAT_LARGE_INTEGER = 0x0000000a;
  static const CLUSPROP_FORMAT_WORD = 0x0000000b;
  static const CLUSPROP_FORMAT_FILETIME = 0x0000000c;
  static const CLUSPROP_FORMAT_VALUE_LIST = 0x0000000d;
  static const CLUSPROP_FORMAT_PROPERTY_LIST = 0x0000000e;
  static const CLUSPROP_FORMAT_USER = 0x00008000;
}

/// {@category Enum}
class CLUSTER_PROPERTY_SYNTAX {
  static const CLUSPROP_SYNTAX_ENDMARK = 0x00000000;
  static const CLUSPROP_SYNTAX_NAME = 0x00040003;
  static const CLUSPROP_SYNTAX_RESCLASS = 0x00020002;
  static const CLUSPROP_SYNTAX_LIST_VALUE_SZ = 0x00010003;
  static const CLUSPROP_SYNTAX_LIST_VALUE_EXPAND_SZ = 0x00010004;
  static const CLUSPROP_SYNTAX_LIST_VALUE_DWORD = 0x00010002;
  static const CLUSPROP_SYNTAX_LIST_VALUE_BINARY = 0x00010001;
  static const CLUSPROP_SYNTAX_LIST_VALUE_MULTI_SZ = 0x00010005;
  static const CLUSPROP_SYNTAX_LIST_VALUE_LONG = 0x00010007;
  static const CLUSPROP_SYNTAX_LIST_VALUE_EXPANDED_SZ = 0x00010008;
  static const CLUSPROP_SYNTAX_LIST_VALUE_SECURITY_DESCRIPTOR = 0x00010009;
  static const CLUSPROP_SYNTAX_LIST_VALUE_LARGE_INTEGER = 0x0001000a;
  static const CLUSPROP_SYNTAX_LIST_VALUE_ULARGE_INTEGER = 0x00010006;
  static const CLUSPROP_SYNTAX_LIST_VALUE_WORD = 0x0001000b;
  static const CLUSPROP_SYNTAX_LIST_VALUE_PROPERTY_LIST = 0x0001000e;
  static const CLUSPROP_SYNTAX_LIST_VALUE_FILETIME = 0x0001000c;
  static const CLUSPROP_SYNTAX_DISK_SIGNATURE = 0x00050002;
  static const CLUSPROP_SYNTAX_SCSI_ADDRESS = 0x00060002;
  static const CLUSPROP_SYNTAX_DISK_NUMBER = 0x00070002;
  static const CLUSPROP_SYNTAX_PARTITION_INFO = 0x00080001;
  static const CLUSPROP_SYNTAX_FTSET_INFO = 0x00090001;
  static const CLUSPROP_SYNTAX_DISK_SERIALNUMBER = 0x000a0003;
  static const CLUSPROP_SYNTAX_DISK_GUID = 0x000b0003;
  static const CLUSPROP_SYNTAX_DISK_SIZE = 0x000c0006;
  static const CLUSPROP_SYNTAX_PARTITION_INFO_EX = 0x000d0001;
  static const CLUSPROP_SYNTAX_PARTITION_INFO_EX2 = 0x000e0001;
  static const CLUSPROP_SYNTAX_STORAGE_DEVICE_ID_DESCRIPTOR = 0x000f0001;
}

/// {@category Enum}
class CLUSTER_PROPERTY_TYPE {
  static const CLUSPROP_TYPE_UNKNOWN = 0xffffffff;
  static const CLUSPROP_TYPE_ENDMARK = 0x00000000;
  static const CLUSPROP_TYPE_LIST_VALUE = 0x00000001;
  static const CLUSPROP_TYPE_RESCLASS = 0x00000002;
  static const CLUSPROP_TYPE_RESERVED1 = 0x00000003;
  static const CLUSPROP_TYPE_NAME = 0x00000004;
  static const CLUSPROP_TYPE_SIGNATURE = 0x00000005;
  static const CLUSPROP_TYPE_SCSI_ADDRESS = 0x00000006;
  static const CLUSPROP_TYPE_DISK_NUMBER = 0x00000007;
  static const CLUSPROP_TYPE_PARTITION_INFO = 0x00000008;
  static const CLUSPROP_TYPE_FTSET_INFO = 0x00000009;
  static const CLUSPROP_TYPE_DISK_SERIALNUMBER = 0x0000000a;
  static const CLUSPROP_TYPE_DISK_GUID = 0x0000000b;
  static const CLUSPROP_TYPE_DISK_SIZE = 0x0000000c;
  static const CLUSPROP_TYPE_PARTITION_INFO_EX = 0x0000000d;
  static const CLUSPROP_TYPE_PARTITION_INFO_EX2 = 0x0000000e;
  static const CLUSPROP_TYPE_STORAGE_DEVICE_ID_DESCRIPTOR = 0x0000000f;
  static const CLUSPROP_TYPE_USER = 0x00008000;
}

/// {@category Enum}
class CLUSTER_QUORUM_TYPE {
  static const OperationalQuorum = 0x00000000;
  static const ModifyQuorum = 0x00000001;
}

/// {@category Enum}
class CLUSTER_QUORUM_VALUE {
  static const CLUSTER_QUORUM_MAINTAINED = 0x00000000;
  static const CLUSTER_QUORUM_LOST = 0x00000001;
}

/// {@category Enum}
class CLUSTER_REG_COMMAND {
  static const CLUSREG_COMMAND_NONE = 0x00000000;
  static const CLUSREG_SET_VALUE = 0x00000001;
  static const CLUSREG_CREATE_KEY = 0x00000002;
  static const CLUSREG_DELETE_KEY = 0x00000003;
  static const CLUSREG_DELETE_VALUE = 0x00000004;
  static const CLUSREG_SET_KEY_SECURITY = 0x00000005;
  static const CLUSREG_VALUE_DELETED = 0x00000006;
  static const CLUSREG_READ_KEY = 0x00000007;
  static const CLUSREG_READ_VALUE = 0x00000008;
  static const CLUSREG_READ_ERROR = 0x00000009;
  static const CLUSREG_CONTROL_COMMAND = 0x0000000a;
  static const CLUSREG_CONDITION_EXISTS = 0x0000000b;
  static const CLUSREG_CONDITION_NOT_EXISTS = 0x0000000c;
  static const CLUSREG_CONDITION_IS_EQUAL = 0x0000000d;
  static const CLUSREG_CONDITION_IS_NOT_EQUAL = 0x0000000e;
  static const CLUSREG_CONDITION_IS_GREATER_THAN = 0x0000000f;
  static const CLUSREG_CONDITION_IS_LESS_THAN = 0x00000010;
  static const CLUSREG_CONDITION_KEY_EXISTS = 0x00000011;
  static const CLUSREG_CONDITION_KEY_NOT_EXISTS = 0x00000012;
  static const CLUSREG_LAST_COMMAND = 0x00000013;
}

/// {@category Enum}
class CLUSTER_RESOURCE_APPLICATION_STATE {
  static const ClusterResourceApplicationStateUnknown = 0x00000001;
  static const ClusterResourceApplicationOSHeartBeat = 0x00000002;
  static const ClusterResourceApplicationReady = 0x00000003;
}

/// {@category Enum}
class CLUSTER_RESOURCE_CLASS {
  static const CLUS_RESCLASS_UNKNOWN = 0x00000000;
  static const CLUS_RESCLASS_STORAGE = 0x00000001;
  static const CLUS_RESCLASS_NETWORK = 0x00000002;
  static const CLUS_RESCLASS_USER = 0x00008000;
}

/// {@category Enum}
class CLUSTER_RESOURCE_CREATE_FLAGS {
  static const CLUSTER_RESOURCE_DEFAULT_MONITOR = 0x00000000;
  static const CLUSTER_RESOURCE_SEPARATE_MONITOR = 0x00000001;
  static const CLUSTER_RESOURCE_VALID_FLAGS = 0x00000001;
}

/// {@category Enum}
class CLUSTER_RESOURCE_EMBEDDED_FAILURE_ACTION {
  static const ClusterResourceEmbeddedFailureActionNone = 0x00000000;
  static const ClusterResourceEmbeddedFailureActionLogOnly = 0x00000001;
  static const ClusterResourceEmbeddedFailureActionRecover = 0x00000002;
}

/// {@category Enum}
class CLUSTER_RESOURCE_ENUM {
  static const CLUSTER_RESOURCE_ENUM_DEPENDS = 0x00000001;
  static const CLUSTER_RESOURCE_ENUM_PROVIDES = 0x00000002;
  static const CLUSTER_RESOURCE_ENUM_NODES = 0x00000004;
  static const CLUSTER_RESOURCE_ENUM_ALL = 0x00000007;
}

/// {@category Enum}
class CLUSTER_RESOURCE_RESTART_ACTION {
  static const ClusterResourceDontRestart = 0x00000000;
  static const ClusterResourceRestartNoNotify = 0x00000001;
  static const ClusterResourceRestartNotify = 0x00000002;
  static const ClusterResourceRestartActionCount = 0x00000003;
}

/// {@category Enum}
class CLUSTER_RESOURCE_STATE {
  static const ClusterResourceStateUnknown = 0xffffffff;
  static const ClusterResourceInherited = 0x00000000;
  static const ClusterResourceInitializing = 0x00000001;
  static const ClusterResourceOnline = 0x00000002;
  static const ClusterResourceOffline = 0x00000003;
  static const ClusterResourceFailed = 0x00000004;
  static const ClusterResourcePending = 0x00000080;
  static const ClusterResourceOnlinePending = 0x00000081;
  static const ClusterResourceOfflinePending = 0x00000082;
}

/// {@category Enum}
class CLUSTER_RESOURCE_STATE_CHANGE_REASON {
  static const eResourceStateChangeReasonUnknown = 0x00000000;
  static const eResourceStateChangeReasonMove = 0x00000001;
  static const eResourceStateChangeReasonFailover = 0x00000002;
  static const eResourceStateChangeReasonFailedMove = 0x00000003;
  static const eResourceStateChangeReasonShutdown = 0x00000004;
  static const eResourceStateChangeReasonRundown = 0x00000005;
}

/// {@category Enum}
class CLUSTER_RESOURCE_TYPE_ENUM {
  static const CLUSTER_RESOURCE_TYPE_ENUM_NODES = 0x00000001;
  static const CLUSTER_RESOURCE_TYPE_ENUM_RESOURCES = 0x00000002;
  static const CLUSTER_RESOURCE_TYPE_ENUM_ALL = 0x00000003;
}

/// {@category Enum}
class CLUSTER_ROLE {
  static const ClusterRoleDHCP = 0x00000000;
  static const ClusterRoleDTC = 0x00000001;
  static const ClusterRoleFileServer = 0x00000002;
  static const ClusterRoleGenericApplication = 0x00000003;
  static const ClusterRoleGenericScript = 0x00000004;
  static const ClusterRoleGenericService = 0x00000005;
  static const ClusterRoleISCSINameServer = 0x00000006;
  static const ClusterRoleMSMQ = 0x00000007;
  static const ClusterRoleNFS = 0x00000008;
  static const ClusterRolePrintServer = 0x00000009;
  static const ClusterRoleStandAloneNamespaceServer = 0x0000000a;
  static const ClusterRoleVolumeShadowCopyServiceTask = 0x0000000b;
  static const ClusterRoleWINS = 0x0000000c;
  static const ClusterRoleTaskScheduler = 0x0000000d;
  static const ClusterRoleNetworkFileSystem = 0x0000000e;
  static const ClusterRoleDFSReplicatedFolder = 0x0000000f;
  static const ClusterRoleDistributedFileSystem = 0x00000010;
  static const ClusterRoleDistributedNetworkName = 0x00000011;
  static const ClusterRoleFileShare = 0x00000012;
  static const ClusterRoleFileShareWitness = 0x00000013;
  static const ClusterRoleHardDisk = 0x00000014;
  static const ClusterRoleIPAddress = 0x00000015;
  static const ClusterRoleIPV6Address = 0x00000016;
  static const ClusterRoleIPV6TunnelAddress = 0x00000017;
  static const ClusterRoleISCSITargetServer = 0x00000018;
  static const ClusterRoleNetworkName = 0x00000019;
  static const ClusterRolePhysicalDisk = 0x0000001a;
  static const ClusterRoleSODAFileServer = 0x0000001b;
  static const ClusterRoleStoragePool = 0x0000001c;
  static const ClusterRoleVirtualMachine = 0x0000001d;
  static const ClusterRoleVirtualMachineConfiguration = 0x0000001e;
  static const ClusterRoleVirtualMachineReplicaBroker = 0x0000001f;
}

/// {@category Enum}
class CLUSTER_ROLE_STATE {
  static const ClusterRoleUnknown = 0xffffffff;
  static const ClusterRoleClustered = 0x00000000;
  static const ClusterRoleUnclustered = 0x00000001;
}

/// {@category Enum}
class CLUSTER_SETUP_PHASE {
  static const ClusterSetupPhaseInitialize = 0x00000001;
  static const ClusterSetupPhaseValidateNodeState = 0x00000064;
  static const ClusterSetupPhaseValidateNetft = 0x00000066;
  static const ClusterSetupPhaseValidateClusDisk = 0x00000067;
  static const ClusterSetupPhaseConfigureClusSvc = 0x00000068;
  static const ClusterSetupPhaseStartingClusSvc = 0x00000069;
  static const ClusterSetupPhaseQueryClusterNameAccount = 0x0000006a;
  static const ClusterSetupPhaseValidateClusterNameAccount = 0x0000006b;
  static const ClusterSetupPhaseCreateClusterAccount = 0x0000006c;
  static const ClusterSetupPhaseConfigureClusterAccount = 0x0000006d;
  static const ClusterSetupPhaseFormingCluster = 0x000000c8;
  static const ClusterSetupPhaseAddClusterProperties = 0x000000c9;
  static const ClusterSetupPhaseCreateResourceTypes = 0x000000ca;
  static const ClusterSetupPhaseCreateGroups = 0x000000cb;
  static const ClusterSetupPhaseCreateIPAddressResources = 0x000000cc;
  static const ClusterSetupPhaseCreateNetworkName = 0x000000cd;
  static const ClusterSetupPhaseClusterGroupOnline = 0x000000ce;
  static const ClusterSetupPhaseGettingCurrentMembership = 0x0000012c;
  static const ClusterSetupPhaseAddNodeToCluster = 0x0000012d;
  static const ClusterSetupPhaseNodeUp = 0x0000012e;
  static const ClusterSetupPhaseMoveGroup = 0x00000190;
  static const ClusterSetupPhaseDeleteGroup = 0x00000191;
  static const ClusterSetupPhaseCleanupCOs = 0x00000192;
  static const ClusterSetupPhaseOfflineGroup = 0x00000193;
  static const ClusterSetupPhaseEvictNode = 0x00000194;
  static const ClusterSetupPhaseCleanupNode = 0x00000195;
  static const ClusterSetupPhaseCoreGroupCleanup = 0x00000196;
  static const ClusterSetupPhaseFailureCleanup = 0x000003e7;
}

/// {@category Enum}
class CLUSTER_SETUP_PHASE_SEVERITY {
  static const ClusterSetupPhaseInformational = 0x00000001;
  static const ClusterSetupPhaseWarning = 0x00000002;
  static const ClusterSetupPhaseFatal = 0x00000003;
}

/// {@category Enum}
class CLUSTER_SETUP_PHASE_TYPE {
  static const ClusterSetupPhaseStart = 0x00000001;
  static const ClusterSetupPhaseContinue = 0x00000002;
  static const ClusterSetupPhaseEnd = 0x00000003;
  static const ClusterSetupPhaseReport = 0x00000004;
}

/// {@category Enum}
class CLUSTER_SHARED_VOLUME_BACKUP_STATE {
  static const VolumeBackupNone = 0x00000000;
  static const VolumeBackupInProgress = 0x00000001;
}

/// {@category Enum}
class CLUSTER_SHARED_VOLUME_RENAME_INPUT_TYPE {
  static const ClusterSharedVolumeRenameInputTypeNone = 0x00000000;
  static const ClusterSharedVolumeRenameInputTypeVolumeOffset = 0x00000001;
  static const ClusterSharedVolumeRenameInputTypeVolumeId = 0x00000002;
  static const ClusterSharedVolumeRenameInputTypeVolumeName = 0x00000003;
  static const ClusterSharedVolumeRenameInputTypeVolumeGuid = 0x00000004;
}

/// {@category Enum}
class CLUSTER_SHARED_VOLUME_SNAPSHOT_STATE {
  static const ClusterSharedVolumeSnapshotStateUnknown = 0x00000000;
  static const ClusterSharedVolumePrepareForHWSnapshot = 0x00000001;
  static const ClusterSharedVolumeHWSnapshotCompleted = 0x00000002;
  static const ClusterSharedVolumePrepareForFreeze = 0x00000003;
}

/// {@category Enum}
class CLUSTER_SHARED_VOLUME_STATE {
  static const SharedVolumeStateUnavailable = 0x00000000;
  static const SharedVolumeStatePaused = 0x00000001;
  static const SharedVolumeStateActive = 0x00000002;
  static const SharedVolumeStateActiveRedirected = 0x00000003;
  static const SharedVolumeStateActiveVolumeRedirected = 0x00000004;
}

/// {@category Enum}
class CLUSTER_STORAGENODE_STATE {
  static const ClusterStorageNodeStateUnknown = 0x00000000;
  static const ClusterStorageNodeUp = 0x00000001;
  static const ClusterStorageNodeDown = 0x00000002;
  static const ClusterStorageNodePaused = 0x00000003;
  static const ClusterStorageNodeStarting = 0x00000004;
  static const ClusterStorageNodeStopping = 0x00000005;
}

/// {@category Enum}
class CLUSTER_UPGRADE_PHASE {
  static const ClusterUpgradePhaseInitialize = 0x00000001;
  static const ClusterUpgradePhaseValidatingUpgrade = 0x00000002;
  static const ClusterUpgradePhaseUpgradingComponents = 0x00000003;
  static const ClusterUpgradePhaseInstallingNewComponents = 0x00000004;
  static const ClusterUpgradePhaseUpgradeComplete = 0x00000005;
}

/// {@category Enum}
class CLUS_AFFINITY_RULE_TYPE {
  static const CLUS_AFFINITY_RULE_NONE = 0x00000000;
  static const CLUS_AFFINITY_RULE_SAME_FAULT_DOMAIN = 0x00000001;
  static const CLUS_AFFINITY_RULE_SAME_NODE = 0x00000002;
  static const CLUS_AFFINITY_RULE_DIFFERENT_FAULT_DOMAIN = 0x00000003;
  static const CLUS_AFFINITY_RULE_DIFFERENT_NODE = 0x00000004;
  static const CLUS_AFFINITY_RULE_MIN = 0x00000000;
  static const CLUS_AFFINITY_RULE_MAX = 0x00000004;
}

/// {@category Enum}
class CLUS_CHARACTERISTICS {
  static const CLUS_CHAR_UNKNOWN = 0x00000000;
  static const CLUS_CHAR_QUORUM = 0x00000001;
  static const CLUS_CHAR_DELETE_REQUIRES_ALL_NODES = 0x00000002;
  static const CLUS_CHAR_LOCAL_QUORUM = 0x00000004;
  static const CLUS_CHAR_LOCAL_QUORUM_DEBUG = 0x00000008;
  static const CLUS_CHAR_REQUIRES_STATE_CHANGE_REASON = 0x00000010;
  static const CLUS_CHAR_BROADCAST_DELETE = 0x00000020;
  static const CLUS_CHAR_SINGLE_CLUSTER_INSTANCE = 0x00000040;
  static const CLUS_CHAR_SINGLE_GROUP_INSTANCE = 0x00000080;
  static const CLUS_CHAR_COEXIST_IN_SHARED_VOLUME_GROUP = 0x00000100;
  static const CLUS_CHAR_PLACEMENT_DATA = 0x00000200;
  static const CLUS_CHAR_MONITOR_DETACH = 0x00000400;
  static const CLUS_CHAR_MONITOR_REATTACH = 0x00000800;
  static const CLUS_CHAR_OPERATION_CONTEXT = 0x00001000;
  static const CLUS_CHAR_CLONES = 0x00002000;
  static const CLUS_CHAR_NOT_PREEMPTABLE = 0x00004000;
  static const CLUS_CHAR_NOTIFY_NEW_OWNER = 0x00008000;
  static const CLUS_CHAR_SUPPORTS_UNMONITORED_STATE = 0x00010000;
  static const CLUS_CHAR_INFRASTRUCTURE = 0x00020000;
  static const CLUS_CHAR_VETO_DRAIN = 0x00040000;
}

/// {@category Enum}
class CLUS_FLAGS {
  static const CLUS_FLAG_CORE = 0x00000001;
}

/// {@category Enum}
class CLUS_GROUP_START_SETTING {
  static const CLUS_GROUP_START_ALWAYS = 0x00000000;
  static const CLUS_GROUP_DO_NOT_START = 0x00000001;
  static const CLUS_GROUP_START_ALLOWED = 0x00000002;
}

/// {@category Enum}
class CLUS_RESSUBCLASS {
  static const CLUS_RESSUBCLASS_SHARED = 0x80000000;
}

/// {@category Enum}
class CLUS_RESSUBCLASS_NETWORK {
  static const CLUS_RESSUBCLASS_NETWORK_INTERNET_PROTOCOL = 0x80000000;
}

/// {@category Enum}
class CLUS_RESSUBCLASS_STORAGE {
  static const CLUS_RESSUBCLASS_STORAGE_SHARED_BUS = 0x80000000;
  static const CLUS_RESSUBCLASS_STORAGE_DISK = 0x40000000;
  static const CLUS_RESSUBCLASS_STORAGE_REPLICATION = 0x10000000;
}

/// {@category Enum}
class FAILURE_TYPE {
  static const FAILURE_TYPE_GENERAL = 0x00000000;
  static const FAILURE_TYPE_EMBEDDED = 0x00000001;
  static const FAILURE_TYPE_NETWORK_LOSS = 0x00000002;
}

/// {@category Enum}
class FILESHARE_CHANGE_ENUM {
  static const FILESHARE_CHANGE_NONE = 0x00000000;
  static const FILESHARE_CHANGE_ADD = 0x00000001;
  static const FILESHARE_CHANGE_DEL = 0x00000002;
  static const FILESHARE_CHANGE_MODIFY = 0x00000003;
}

/// {@category Enum}
class GRP_PLACEMENT_OPTIONS {
  static const GRP_PLACEMENT_OPTIONS_MIN_VALUE = 0x00000000;
  static const GRP_PLACEMENT_OPTIONS_DEFAULT = 0x00000000;
  static const GRP_PLACEMENT_OPTIONS_DISABLE_AUTOBALANCING = 0x00000001;
  static const GRP_PLACEMENT_OPTIONS_ALL = 0x00000001;
}

/// {@category Enum}
class LOG_LEVEL {
  static const LOG_INFORMATION = 0x00000000;
  static const LOG_WARNING = 0x00000001;
  static const LOG_ERROR = 0x00000002;
  static const LOG_SEVERE = 0x00000003;
}

/// {@category Enum}
class MAINTENANCE_MODE_TYPE_ENUM {
  static const MaintenanceModeTypeDisableIsAliveCheck = 0x00000001;
  static const MaintenanceModeTypeOfflineResource = 0x00000002;
  static const MaintenanceModeTypeUnclusterResource = 0x00000003;
}

/// {@category Enum}
class NODE_CLUSTER_STATE {
  static const ClusterStateNotInstalled = 0x00000000;
  static const ClusterStateNotConfigured = 0x00000001;
  static const ClusterStateNotRunning = 0x00000003;
  static const ClusterStateRunning = 0x00000013;
}

/// {@category Enum}
class PLACEMENT_OPTIONS {
  static const PLACEMENT_OPTIONS_MIN_VALUE = 0x00000000;
  static const PLACEMENT_OPTIONS_DEFAULT_PLACEMENT_OPTIONS = 0x00000000;
  static const PLACEMENT_OPTIONS_DISABLE_CSV_VM_DEPENDENCY = 0x00000001;
  static const PLACEMENT_OPTIONS_CONSIDER_OFFLINE_VMS = 0x00000002;
  static const PLACEMENT_OPTIONS_DONT_USE_MEMORY = 0x00000004;
  static const PLACEMENT_OPTIONS_DONT_USE_CPU = 0x00000008;
  static const PLACEMENT_OPTIONS_DONT_USE_LOCAL_TEMP_DISK = 0x00000010;
  static const PLACEMENT_OPTIONS_DONT_RESUME_VMS_WITH_EXISTING_TEMP_DISK = 0x00000020;
  static const PLACEMENT_OPTIONS_SAVE_VMS_WITH_LOCAL_DISK_ON_DRAIN_OVERWRITE = 0x00000040;
  static const PLACEMENT_OPTIONS_DONT_RESUME_AVAILABILTY_SET_VMS_WITH_EXISTING_TEMP_DISK = 0x00000080;
  static const PLACEMENT_OPTIONS_SAVE_AVAILABILTY_SET_VMS_WITH_LOCAL_DISK_ON_DRAIN_OVERWRITE = 0x00000100;
  static const PLACEMENT_OPTIONS_AVAILABILITY_SET_DOMAIN_AFFINITY = 0x00000200;
  static const PLACEMENT_OPTIONS_ALL = 0x000003ff;
}

/// {@category Enum}
class RESDLL_CONTEXT_OPERATION_TYPE {
  static const ResdllContextOperationTypeFailback = 0x00000000;
  static const ResdllContextOperationTypeDrain = 0x00000001;
  static const ResdllContextOperationTypeDrainFailure = 0x00000002;
  static const ResdllContextOperationTypeEmbeddedFailure = 0x00000003;
  static const ResdllContextOperationTypePreemption = 0x00000004;
  static const ResdllContextOperationTypeNetworkDisconnect = 0x00000005;
  static const ResdllContextOperationTypeNetworkDisconnectMoveRetry = 0x00000006;
}

/// {@category Enum}
class RESOURCE_EXIT_STATE {
  static const ResourceExitStateContinue = 0x00000000;
  static const ResourceExitStateTerminate = 0x00000001;
  static const ResourceExitStateMax = 0x00000002;
}

/// {@category Enum}
class RESOURCE_MONITOR_STATE {
  static const RmonInitializing = 0x00000000;
  static const RmonIdle = 0x00000001;
  static const RmonStartingResource = 0x00000002;
  static const RmonInitializingResource = 0x00000003;
  static const RmonOnlineResource = 0x00000004;
  static const RmonOfflineResource = 0x00000005;
  static const RmonShutdownResource = 0x00000006;
  static const RmonDeletingResource = 0x00000007;
  static const RmonIsAlivePoll = 0x00000008;
  static const RmonLooksAlivePoll = 0x00000009;
  static const RmonArbitrateResource = 0x0000000a;
  static const RmonReleaseResource = 0x0000000b;
  static const RmonResourceControl = 0x0000000c;
  static const RmonResourceTypeControl = 0x0000000d;
  static const RmonTerminateResource = 0x0000000e;
  static const RmonDeadlocked = 0x0000000f;
}

/// {@category Enum}
class SR_DISK_REPLICATION_ELIGIBLE {
  static const SrDiskReplicationEligibleNone = 0x00000000;
  static const SrDiskReplicationEligibleYes = 0x00000001;
  static const SrDiskReplicationEligibleOffline = 0x00000002;
  static const SrDiskReplicationEligibleNotGpt = 0x00000003;
  static const SrDiskReplicationEligiblePartitionLayoutMismatch = 0x00000004;
  static const SrDiskReplicationEligibleInsufficientFreeSpace = 0x00000005;
  static const SrDiskReplicationEligibleNotInSameSite = 0x00000006;
  static const SrDiskReplicationEligibleInSameSite = 0x00000007;
  static const SrDiskReplicationEligibleFileSystemNotSupported = 0x00000008;
  static const SrDiskReplicationEligibleAlreadyInReplication = 0x00000009;
  static const SrDiskReplicationEligibleSameAsSpecifiedDisk = 0x0000000a;
  static const SrDiskReplicationEligibleOther = 0x0000270f;
}

/// {@category Enum}
class SR_REPLICATED_DISK_TYPE {
  static const SrReplicatedDiskTypeNone = 0x00000000;
  static const SrReplicatedDiskTypeSource = 0x00000001;
  static const SrReplicatedDiskTypeLogSource = 0x00000002;
  static const SrReplicatedDiskTypeDestination = 0x00000003;
  static const SrReplicatedDiskTypeLogDestination = 0x00000004;
  static const SrReplicatedDiskTypeNotInParthership = 0x00000005;
  static const SrReplicatedDiskTypeLogNotInParthership = 0x00000006;
  static const SrReplicatedDiskTypeOther = 0x00000007;
}

/// {@category Enum}
class VM_RESDLL_CONTEXT {
  static const VmResdllContextTurnOff = 0x00000000;
  static const VmResdllContextSave = 0x00000001;
  static const VmResdllContextShutdown = 0x00000002;
  static const VmResdllContextShutdownForce = 0x00000003;
  static const VmResdllContextLiveMigration = 0x00000004;
}

